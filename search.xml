<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>谈李商隐</title>
      <link href="/2020/02/14/tan-li-shang-yin/"/>
      <url>/2020/02/14/tan-li-shang-yin/</url>
      
        <content type="html"><![CDATA[<h1 id="襟抱未曾开，羁泊独徘徊"><a href="#襟抱未曾开，羁泊独徘徊" class="headerlink" title="襟抱未曾开，羁泊独徘徊"></a>襟抱未曾开，羁泊独徘徊</h1><p>李商隐努力了一生，也没在官场上踩好节奏。他有时机缘巧合之间得受赏识，却又常常被突如其来的意外打乱阵脚。于是李商隐一生，只好在政治斗争的漩涡之中羁泊徘徊。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/377adab44aed2e732181eb328901a18b87d6fa40.jpg" alt=""></p><h2 id="1-生不逢时，晚唐凋敝"><a href="#1-生不逢时，晚唐凋敝" class="headerlink" title="1. 生不逢时，晚唐凋敝"></a>1. 生不逢时，晚唐凋敝</h2><p>公元813年，李商隐出生了。</p><p>李商隐幼年的那几年，正是唐宪宗李纯年轻气盛，政治锐气外露，励精图治的时候。经历了唐宪宗一番大刀阔斧的政治改革，加上果敢有力的削藩措施，迎来了“元和中兴”局面，当时的文人们都心怀希望，以为恢复盛唐的气象指日可待。但李纯终究逃不过晚唐皇帝的通病——总想长生不老。单说他拜迎佛骨，兴师动众，为此甚至将老臣韩愈贬官，就让世人轰动。而后李纯更是对身边人想杀就杀，暴戾残忍，四十三岁便驾崩，留下了一团糟的政治局面和愈发猖狂的宦官。使晚唐的政治局面急转直下。而他其后的几个皇帝也不太成器，唐穆宗比起自己的老爹更是“长江后浪推前浪”，把晚唐的一滩浑水放任自流，甚至搅得更浑。一时间整个唐朝都陷入了无人管理的局面，只能任由某些官员专擅，最终酿成灾祸。</p><p>由此可见李商隐连出生也出生得不是时候，是名副其实的“生不逢时”。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20190813_112209.jpg" alt=""></p><h2 id="2-幼年失怙，忧郁一生"><a href="#2-幼年失怙，忧郁一生" class="headerlink" title="2. 幼年失怙，忧郁一生"></a>2. 幼年失怙，忧郁一生</h2><p>李商隐的家族比较惨，说是李氏宗族旁亲，但历代没出过什么大官，要想在当朝的那些李氏官员中混个脸熟，绞尽脑汁攀关系，人家还是懒得搭理。所以李商隐的父亲李嗣充分意识到了这个问题，把光宗耀祖的重任交给了李商隐，李商隐也确实有才华，根本掩盖不住，留下了“五岁诵经书，七岁弄笔砚”的天才事迹。极早地就被父亲带去浙江跟在身边学习，至少观摩一下做官的基本素养。</p><p>但可惜李商隐不到十岁，父亲就死在了任上，李商隐被迫还乡，开始操持家事，据他自己所言，“佣书贩舂”以补贴家用。在抄书的过程当中，李商隐爱上了读书，也培养了他高度的社会责任感，也让他练出了一手好字和写散文的精湛技艺。</p><p>只是父亲的离世，一直是李商隐心中一道揭不过去的伤疤。</p><p>还年幼的李商隐过早地接受了家庭的重担，而由于母亲的体弱，家里兄弟姊妹的众多，使得李商隐身上的母爱也随之缺失，心中的忧郁自卑愈发的严重。在我看来这段经历与李商隐日后细腻婉转的诗风的形成密不可分。这种忧郁、这种期待被他人关注却又无法融入社会的感受，伴随了李商隐一生，也终使他在政治中得不到施展才华的机会。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20190813_112627.jpg" alt=""></p><h2 id="3-承蒙赏识，得中进士"><a href="#3-承蒙赏识，得中进士" class="headerlink" title="3. 承蒙赏识，得中进士"></a>3. 承蒙赏识，得中进士</h2><p>由于李商隐可为一绝的散文水准，他幸而结识了当时的宰相令狐楚。令狐楚何其老道，阳光毒辣，认为此子日后必大有可为，于是开开心心的提携李商隐，还资助他上学，把自己的儿子和他放在一起。</p><p>此外，令狐楚还亲自教李商隐应试，李商隐当时散文极佳，骈文诗歌却不太精妙，得到令狐楚的教导后水平突飞猛进，在当时的京城也算是小有名气。</p><p>李商隐当时已参加多次科举，但当时的科举考试一是录取名额少，概率低；二是朝廷无能，录取名额几乎全部被权贵之人垄断，没有广泛的人脉，想要中举几乎是不可能的。李商隐开始还不信邪，在诗中他还满腹牢骚，写道：<code>“鸾皇期一举，燕雀不相饶”</code>，将考官比作低微的燕雀。但最终他发现，自己还是落榜了。还是最后令狐楚的儿子向主考官通气，李商隐才得以中举。</p><p>这件事在李商隐心中也留下了不小的阴影，但也让他对令狐楚这位恩师更加感激。按照令狐楚为他规划好的路线，李商隐本可以一路平步青云，身居高位。但李商隐偏偏点背，令狐楚的好心却间接酿成了后来的悲惨结局。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20190813_112621.jpg" alt=""></p><h2 id="4-卷入纷争，流离官场"><a href="#4-卷入纷争，流离官场" class="headerlink" title="4. 卷入纷争，流离官场"></a>4. 卷入纷争，流离官场</h2><p>阴差阳错之下，李商隐受王茂元招募，进了幕府。王茂元对李商隐的才华赏识有家，把自己的女儿嫁给了李商隐。王茂元是当时的“牛李党争”中牛党的终于要拥护者，而令狐一家则是李党的代表。这下“王茂元女婿”这顶帽子给李商隐带来了不小的麻烦，直接让他授官的命令被中书省以“人品不佳”驳回，这下李商隐背叛恩师、忘恩负义的罪名是怎么摘也摘不掉了。于是李商隐被迫卷入了这场最终把唐朝拖垮的政治纷争之中，到死也没能谋得高位。</p><h2 id="5-仕途失意，爱妻离世"><a href="#5-仕途失意，爱妻离世" class="headerlink" title="5. 仕途失意，爱妻离世"></a>5. 仕途失意，爱妻离世</h2><p>似乎命运总在跟李商隐做对，当他当上判官，好不容易有了几年安稳日子后，自己的顶头上司又被贬谪，自己自然难逃下岗的命运。正当李商隐壮志难酬，郁郁寡欢之时，妻子离世的消息传来，更是让他肝肠寸断。<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/30adcbef76094b36a32876f3adcc7cd98d109d71.jpg" alt=""></p><h2 id="6-寄情虚妄，残阳迟暮"><a href="#6-寄情虚妄，残阳迟暮" class="headerlink" title="6. 寄情虚妄，残阳迟暮"></a>6. 寄情虚妄，残阳迟暮</h2><p>李商隐从小缺爱，缺乏关怀。因此，对于每一个爱护过、帮助过他的人，他都怀有极深的感激之情。对于恩师令狐楚如此，对于王茂元和贤惠持家的妻子更是如此。但命运偏偏让他卷入政治漩涡，成为两党纷争的牺牲品。他说什么都会被指责，发表一点意见就会被骂，到最后甚至朝臣都不屑于给他说话的机会。于是，在他亡妻之后的生命里剩下的几年，他寄托情感于宗教，毕竟现实已无法让李商隐感到解脱。此时的李商隐终于心灰意冷，再也没有了斗争下去的信心。</p><p>既然大家都不听我的，就写诗吧。于是，李商隐用大量隐晦的诗篇，展现了他自己的内心世界。</p><blockquote><p>重过圣女祠</p><p>白石岩扉碧藓滋，上清沦谪得归迟。<br>一春梦雨常飘瓦，尽日灵风不满旗。</p><p>萼绿华来无定所，杜兰香去未移时。<br>玉郎会此通仙籍，忆向天阶问紫芝。</p></blockquote><p>在这首诗里，李商隐想象了一个并不存在的仙女，在一问一答中，在修仙问道的迷幻色彩中，道出了李商隐人生最后的告白。其实，那个贬入人间的仙女正是李商隐自己，空有一身才华。不论是李党还是牛党都对李商隐的才气赞赏有加，但却因命运无常难以得志。于是李商隐只好在独自修行中终了此生，在旷世的孤独中哀叹命运。</p><h2 id="7-一点感想"><a href="#7-一点感想" class="headerlink" title="7. 一点感想"></a>7. 一点感想</h2><p>李商隐的一生，在压抑与悲苦中度过。他的自卑、他的忧郁、他有时的狂妄，都是他在官场上无法生存下去的原因。他的运气说好则有些不尽人意，说坏则又过于片面。但值得我们铭记的是，李商隐的一生总是在努力，哪怕在他生命的最后几年，他也在认真做自己的官，写好自己的诗。他的一生留下了许多政治讽喻诗，都是难得的佳作，也都传达了李商隐对国事的关怀。一生的羁泊徘徊造就了他婉转的诗风，也让李商隐这个名字，伴随晚唐的历史，永远被人们所铭记。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源协议</title>
      <link href="/2020/02/02/kai-yuan-xie-yi/"/>
      <url>/2020/02/02/kai-yuan-xie-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MIT-License"><a href="#1-MIT-License" class="headerlink" title="1. MIT License"></a>1. MIT License</h1><p>来自麻省理工的高端许可证：</p><p>A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.</p><p>内容：较为宽松，仅署名即可，github上经常用。</p><p>示例：</p><pre><code>MIT LicenseCopyright (c) [year] [fullname]Permission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.</code></pre><h1 id="2-Creative-Commons-知识共享"><a href="#2-Creative-Commons-知识共享" class="headerlink" title="2.Creative Commons(知识共享)"></a>2.Creative Commons(知识共享)</h1><h2 id="2-1-CC-BY"><a href="#2-1-CC-BY" class="headerlink" title="2.1 CC BY"></a>2.1 CC BY</h2><p>This license lets others distribute, remix, adapt, and build upon your work, even commercially, as long as they credit you for the original creation. This is the most accommodating of licenses offered. Recommended for maximum dissemination and use of licensed materials.</p><p>署名就对了。</p><h2 id="2-2-CC-BY-SA"><a href="#2-2-CC-BY-SA" class="headerlink" title="2.2 CC BY-SA"></a>2.2 CC BY-SA</h2><p>This license lets others remix, adapt, and build upon your work even for commercial purposes, as long as they credit you and license their new creations under the identical terms. This license is often compared to “copyleft” free and open source software licenses. All new works based on yours will carry the same license, so any derivatives will also allow commercial use. This is the license used by Wikipedia, and is recommended for materials that would benefit from incorporating content from Wikipedia and similarly licensed projects.</p><p>署名，并且强制以相同方式共享。</p><p>（我开源，你也必须开源）</p><h2 id="2-3-CC-BY-ND"><a href="#2-3-CC-BY-ND" class="headerlink" title="2.3 CC BY-ND"></a>2.3 CC BY-ND</h2><p>This license lets others reuse the work for any purpose, including commercially; however, it cannot be shared with others in adapted form, and credit must be provided to you.</p><p>署名，并且禁止演绎。</p><p>（想改我代码？没门）</p><h2 id="2-4-CC-BY-NC"><a href="#2-4-CC-BY-NC" class="headerlink" title="2.4 CC BY-NC"></a>2.4 CC BY-NC</h2><p>This license lets others remix, adapt, and build upon your work non-commercially, and although their new works must also acknowledge you and be non-commercial, they don’t have to license their derivative works on the same terms.</p><p>署名，严禁用于商业用途</p><h2 id="2-5-CC-BY-NC-SA"><a href="#2-5-CC-BY-NC-SA" class="headerlink" title="2.5 CC BY-NC-SA"></a>2.5 CC BY-NC-SA</h2><p>This license lets others remix, adapt, and build upon your work non-commercially, as long as they credit you and license their new creations under the identical terms.</p><p>署名，非商业，相同方式共享</p><p>（大家一起排列组合啊！）</p><h2 id="2-6-CC-BY-NC-ND"><a href="#2-6-CC-BY-NC-ND" class="headerlink" title="2.6 CC BY-NC-ND"></a>2.6 CC BY-NC-ND</h2><p>号称CC中最严的条款。</p><p>署名，非商业，禁止修改。</p><h1 id="3-MPL-2-0（Mozilla-Public-License）"><a href="#3-MPL-2-0（Mozilla-Public-License）" class="headerlink" title="3. MPL 2.0（Mozilla Public License）"></a>3. MPL 2.0（Mozilla Public License）</h1><p>Permissions of this weak copyleft license are conditioned on making available source code of licensed files and modifications of those files under the same license (or in certain cases, one of the GNU licenses). Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. However, a larger work using the licensed work may be distributed under different terms and without source code for files added in the larger work.</p><p>所有自己原创的可以自己选择开源或闭源。作者的原始文件必须保持原有协议不变。</p><h1 id="4-GPL-v3"><a href="#4-GPL-v3" class="headerlink" title="4. GPL v3"></a>4. GPL v3</h1><p>Permissions of this strong copyleft license are conditioned on making available complete source code of licensed works and modifications, which include larger works using a licensed work, under the same license. Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.</p><p>许可证必须不变。。</p><h1 id="5-Apache-2"><a href="#5-Apache-2" class="headerlink" title="5. Apache 2"></a>5. Apache 2</h1><p>A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.</p><p>有点像GPL，但加入一条：必须标明哪些地方修改过。</p><h1 id="6-BSL（Boost-Software-License-1-0）"><a href="#6-BSL（Boost-Software-License-1-0）" class="headerlink" title="6. BSL（Boost Software License 1.0）"></a>6. BSL（Boost Software License 1.0）</h1><p>A simple permissive license only requiring preservation of copyright and license notices for source (and not binary) distribution. Licensed works, modifications, and larger works may be distributed under different terms and without source code.</p><p>有点像CC BY。</p><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>开源许可证具有的法律效力有限，严格来说它并非法律文本，全靠使用者的自觉。但这一点在西方国家中较为受重视，所以在自己的一些项目中详细说明自己的引用以及加入开源许可证是必要的，这样可以防止一些人利用你的项目从事商业经营却不付版权费，也可以避免不必要的纠纷。</p><p>总之，开源许可证并不能约束别人的行为，但可以减少纠纷。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cmder配置</title>
      <link href="/2020/02/02/cmder/"/>
      <url>/2020/02/02/cmder/</url>
      
        <content type="html"><![CDATA[<h1 id="1-下载及安装"><a href="#1-下载及安装" class="headerlink" title="1. 下载及安装"></a>1. 下载及安装</h1><h3 id="官网链接"><a href="#官网链接" class="headerlink" title="官网链接"></a><a href="https://cmder.net/" target="_blank" rel="noopener">官网链接</a></h3><h2 id="1-1-下载选择"><a href="#1-1-下载选择" class="headerlink" title="1.1 下载选择"></a>1.1 下载选择</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202203800.png" alt="版本"></p><p><strong>Cmder</strong>官网提供两种版本的下载链接，其中<code>Mini</code>版是轻量级的，而<code>Full</code>版本占用空间较大，但包括了内置的<strong>git for windows</strong>还有对其他一些本来在Linux平台上的命令的支持，因此建议下载完整版。</p><blockquote><p>建议下载<code>.7z</code>版本，Cmder官网网速较慢，所以减少下载的文件大小是很有必要的。就是压缩率太高，解压缩的时候可能会比较慢。</p></blockquote><h2 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h2><h3 id="1-2-1-解压缩"><a href="#1-2-1-解压缩" class="headerlink" title="1.2.1 解压缩"></a>1.2.1 解压缩</h3><p>将压缩包内文件全部解压到你想要Cmder安装的位置。</p><p>如果C盘空间充足的话建议解压在C盘顶层目录，这样后期设置一些快捷命令时比较方便。如果空间不够的话可以装在D盘等非系统盘，并不影响正常使用。</p><h3 id="1-2-2-添加至Path"><a href="#1-2-2-添加至Path" class="headerlink" title="1.2.2 添加至Path"></a>1.2.2 添加至Path</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202204828.png" alt="环境变量"></p><p>按照图中的方式配置即可，对应填写自己Cmder安装目录下的<code>./bin</code>目录。</p><h3 id="1-2-3-运行前配置"><a href="#1-2-3-运行前配置" class="headerlink" title="1.2.3 运行前配置"></a>1.2.3 运行前配置</h3><p>打开cmd，输入以下命令（将cmder添加到右键菜单）：</p><pre class="line-numbers language-bash"><code class="language-bash">Cmder.exe /REGISTER ALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h1><h2 id="2-1-中文语言"><a href="#2-1-中文语言" class="headerlink" title="2.1 中文语言"></a>2.1 中文语言</h2><p><code>Win + Alt + P</code>或者点击最右下角的图标按图中所示打开设置界面：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202211914.png" alt="设置"></p><p>然后在<em>通用</em>``General`中更改语言为“<strong>简体中文</strong>”：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202162902.png" alt="更改语言"></p><h2 id="2-2-使用Cmder-彻底替换cmd"><a href="#2-2-使用Cmder-彻底替换cmd" class="headerlink" title="2.2 使用Cmder 彻底替换cmd"></a>2.2 使用Cmder 彻底替换cmd</h2><p>如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/image-20200202212257173.png" alt="默认终端"></p><h2 id="2-3-更改命令提示符为"><a href="#2-3-更改命令提示符为" class="headerlink" title="2.3 更改命令提示符为$"></a>2.3 更改命令提示符为<code>$</code></h2><p>打开<code>./cmder/vendor/clink.lua</code>作如下更改：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202212649.png" alt="更改提示符"></p><h2 id="2-4-外观配置"><a href="#2-4-外观配置" class="headerlink" title="2.4 外观配置"></a>2.4 外观配置</h2><p>根据个人喜好替换以下两个选项：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202212815.png" alt="外观"></p><h2 id="2-5-按键冲突解决"><a href="#2-5-按键冲突解决" class="headerlink" title="2.5 按键冲突解决"></a>2.5 按键冲突解决</h2><p>替换为空值即可。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202213006.png" alt=""></p><h2 id="2-6-使用技巧"><a href="#2-6-使用技巧" class="headerlink" title="2.6 使用技巧"></a>2.6 使用技巧</h2><h3 id="2-6-1-快捷键（Copy别人的）："><a href="#2-6-1-快捷键（Copy别人的）：" class="headerlink" title="2.6.1 快捷键（Copy别人的）："></a>2.6.1 快捷键（Copy别人的）：</h3><pre class="line-numbers language-bash"><code class="language-bash">Tab              自动路径补全Ctrl+T           建立新页签Ctrl+W            关闭页签Ctrl+Tab          切换页签Alt+F4            关闭所有页签Alt+Shift+1     开启cmd.exeAlt+Shift+2     开启powershell.exeAlt+Shift+3     开启powershell.exe <span class="token punctuation">(</span>系统管理员权限<span class="token punctuation">)</span>Ctrl+1          快速切换到第1个页签Ctrl+n          快速切换到第n个页签<span class="token punctuation">(</span> n值无上限<span class="token punctuation">)</span>Alt + enter     切换到全屏状态Ctr+r           历史命令搜索Win+Alt+P          开启工具选项视窗<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-2-快速复制：鼠标框选后自动复制"><a href="#2-6-2-快速复制：鼠标框选后自动复制" class="headerlink" title="2.6.2 快速复制：鼠标框选后自动复制"></a>2.6.2 快速复制：鼠标框选后自动复制</h3><h3 id="2-6-3-自定义命令（alias）"><a href="#2-6-3-自定义命令（alias）" class="headerlink" title="2.6.3 自定义命令（alias）"></a>2.6.3 自定义命令（alias）</h3><p>图中为默认的配置文件：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202213623.png" alt=""></p><p>如果硬要编辑自己的：</p><p>打开文件<code>cmder\config\user-aliases.cmd</code></p><p>定义的时候可以匹配<code>命令 = 命令</code>或者<code>命令 = 路径/程序名</code>来快速切换目录或打开文件</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python及时获取疫情信息</title>
      <link href="/2020/02/02/yi-qing/"/>
      <url>/2020/02/02/yi-qing/</url>
      
        <content type="html"><![CDATA[<h1 id="1-源起"><a href="#1-源起" class="headerlink" title="1. 源起"></a>1. 源起</h1><ol><li><p>刚刚步入2020，正是中国传统农历的春节。正值阖家团圆之际，一场突如其来的疫情席卷湖北武汉，一时间举国震惊，各类谣言“<em>疑似非典</em>”、“<em>武汉某医院尸体无人处理</em>”频频在网络上传播。一时间人心惶惶。</p></li><li><p>但经历了03年非典的战斗，中国人民比以往任何一个时期都更具有抗击疫情的能力和对党和国家坚定的信心。包括不少两院院士的国家疫情防控小组迅速奔赴武汉做病毒分析，很快检测结果颁布，竟然是与曾经的<strong>SARS</strong>同属的冠状病毒再次以新的姿态浮出水面。这种病毒被确认为<strong>2019-nCoV (Novel coronavirus)</strong>，2019新型冠状病毒。</p></li><li><p>虽然在19年年末早已有这种病毒出没，但真正爆发它的威力的时候却是在2020年的春节，武汉一时间成为了禁地。截止这篇文章写作时间，全国基本呈现了以湖北为中心逐级扩散，各省感染人数依次递减的态势，此外还有23个中国以外的国家和地区检测到感染者。疑似病例和确诊感染者人数还在逐步上涨。</p></li><li><p>忽然觉得有些奇怪，自己刚考完试的那会儿还宅在家里翻起了老片全系列《生化危机》，现实版的生化危机俨然在身边上演。虽然冠状病毒的杀伤力并没有电影中T-病毒的“死而复生”那样恐怖与强大。但对于人类这样一个脆弱的碳基生命体来说，这样一种传染性强、死亡率高的新型疾病如果不加控制足以引发大面积的死亡与恐慌。</p></li><li><p>幸好国家的应对速度足够的快，核酸检测试剂在极短的时间内被研发了出来并拨给各省使用，也共享给世界上其他国家；病毒毒株被成功分离并在世界范围内公开；各大新闻网站平台均以最快速度协助分析政府数据，将疫情情况向大众公开。在面对<strong>WHO</strong>的询问时，中国政府也不瞒报，如实将所有相关情况报告给世界卫生组织并全球公开发布，以帮助一些卫生条件落后的国家及早做出准备。毕竟在全球化背景下，任何的一次灾难都可能随着各国之间的交流网络传递至全球，使风险全球化，我们能做的就是尽量降低风险，帮助自己，也帮助世界各国人民抑制疫情，减小损失。</p></li><li><p>疫情爆发后，全国人民众志成城，<strong>钟南山</strong>院士在疫情中逆行，毅然奔赴武汉参与防疫部署工作，在全网受到无数网友点赞。一趟趟医疗物资运送，一波又一波医护人员喊着口号奔赴抗击疫情第一线。刚传出疫情爆发的消息时不觉得这是多么大的一件事，以为离自己很远，当看到这几天武汉已成为重灾区，大量的社会援助也很难保障武汉千万人口的生命安全。医疗物资更是紧缺，防护服、专业手术级防护口罩……在前线奋战的医护人员不惜连续工作超过6个小时来节约资源，自己能多用一会儿就多用一会儿，减少防护服更换次数。一桩桩一件件，我突然感到这些逆风而行的人是多么的伟大。昨天看到一则新闻，上海一位机长本是休假在家照顾重病的母亲，却临时接到任务护送一队来自上海的医疗队。武汉的机场这些天不断运行接送医疗物资及人员，接触过多少感染者无从得知，但这位机长接到命令马不停蹄开赴机场，检查消毒，做起飞前例行检查……他甚至连妻子都没有告诉，直到上了新闻家里人才知道原来他飞的是武汉。再回到上海时，他自觉主动接受隔离观察，不给身边人、给党和国家添半点麻烦。</p></li><li><p>这几天待在家里，仅仅通过网易新闻官方链接上页面的变动，我也看到了中国速度下应对大型公共卫生事件的响应效率和信心。从最早仅有数据表、引入疫情地图，接着开始引入实时播报，同步政府网站信息，到现在可以直接查询有没有可能在公共交通设施上与患者密切接触，还引入了随时间变化的图表。在国家的强硬措施面前，疫情得以有效控制，大量疑似病例通过主动的筛查被确诊，避免了更大规模的扩散。</p></li><li><p>这几天宅在家里刚好没事，就顺带研究了一下python，想试试能不能把数据获取到本地进行更直观的处理展示，于是就有了这篇博文。</p></li></ol><h1 id="2-用到的一些知识"><a href="#2-用到的一些知识" class="headerlink" title="2. 用到的一些知识"></a>2. 用到的一些知识</h1><h2 id="2-1-python网络处理必备库——requests"><a href="#2-1-python网络处理必备库——requests" class="headerlink" title="2.1 python网络处理必备库——requests"></a>2.1 python网络处理必备库——requests</h2><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> requests<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-2-使用python下载文件"><a href="#2-2-使用python下载文件" class="headerlink" title="2.2 使用python下载文件"></a>2.2 使用python下载文件</h2><p><strong>代码如下：</strong>（替换url、filename即可）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://news.163.com/special/epidemic/'</span>down <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>filename <span class="token operator">=</span> <span class="token string">"data.txt"</span><span class="token keyword">with</span> open<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    func<span class="token punctuation">.</span>write<span class="token punctuation">(</span>down<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-python字符串处理"><a href="#2-3-python字符串处理" class="headerlink" title="2.3 python字符串处理"></a>2.3 python字符串处理</h2><h3 id="2-3-1-字符串查找"><a href="#2-3-1-字符串查找" class="headerlink" title="2.3.1 字符串查找"></a>2.3.1 字符串查找</h3><p>使用<code>str.find(s,pos,end)</code>函数，<strong>s</strong>为要寻找的字符/字符串，返回当前字符串中第一个出现<code>s</code>的位置（而且返回的是首部，即<strong>s</strong>中第一个字符的位置）；<code>pos</code>参数指定从字符串的哪一个位置起开始寻找，<code>end</code>参数指定结束查找的位置，<code>pos</code>与<code>end</code>的关系是 <strong>前闭后开</strong>。</p><p>如果找不到对应的字符/字符串，<code>.find()</code>函数返回值为<code>-1</code></p><h3 id="2-3-2-字符串替换"><a href="#2-3-2-字符串替换" class="headerlink" title="2.3.2 字符串替换"></a>2.3.2 字符串替换</h3><p><code>str.replace(a,b,cnt)</code>（a、b均为字符串），意为将字符串中的<code>cnt</code>个数个<code>a</code>替换为<code>b</code></p><h3 id="2-3-3-字符串长度"><a href="#2-3-3-字符串长度" class="headerlink" title="2.3.3 字符串长度"></a>2.3.3 字符串长度</h3><p>使用<code>len(str)</code>函数</p><h3 id="2-3-4-字符串合并"><a href="#2-3-4-字符串合并" class="headerlink" title="2.3.4 字符串合并"></a>2.3.4 字符串合并</h3><p>使用<code>+（加号）</code>即可</p><h3 id="2-3-5-字符串切片"><a href="#2-3-5-字符串切片" class="headerlink" title="2.3.5 字符串切片"></a>2.3.5 字符串切片</h3><p><code>str[a:b]</code>指a到b <strong>前闭后开</strong></p><h2 id="2-4-使用python读取文件"><a href="#2-4-使用python读取文件" class="headerlink" title="2.4 使用python读取文件"></a>2.4 使用python读取文件</h2><p><strong>代码如下</strong>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    data <span class="token operator">=</span> func<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 此方式为全部读取并存储在一个字符串中</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-5-删除文件"><a href="#2-5-删除文件" class="headerlink" title="2.5 删除文件"></a>2.5 删除文件</h2><p><strong>代码如下</strong>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osfilename <span class="token operator">=</span> <span class="token string">'data.txt'</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-6-清屏"><a href="#2-6-清屏" class="headerlink" title="2.6 清屏"></a>2.6 清屏</h2><pre class="line-numbers language-python"><code class="language-python">os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-7-绘制图表"><a href="#2-7-绘制图表" class="headerlink" title="2.7 绘制图表"></a>2.7 绘制图表</h2><h3 id="2-7-1-准备工作"><a href="#2-7-1-准备工作" class="headerlink" title="2.7.1 准备工作"></a>2.7.1 准备工作</h3><p>使用的图形库必须要安装：</p><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> matplotlib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文件头这样引用：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-7-2-解决中文乱码（输出小矩形）问题"><a href="#2-7-2-解决中文乱码（输出小矩形）问题" class="headerlink" title="2.7.2 解决中文乱码（输出小矩形）问题"></a>2.7.2 解决中文乱码（输出小矩形）问题</h3><p>将下面一行代码加在绘图程序执行前：</p><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-7-3-绘制线条的不同参数"><a href="#2-7-3-绘制线条的不同参数" class="headerlink" title="2.7.3 绘制线条的不同参数"></a>2.7.3 绘制线条的不同参数</h3><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>confirm<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'确诊'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>suspect<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'疑似'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.94</span><span class="token punctuation">,</span><span class="token number">0.88</span><span class="token punctuation">,</span><span class="token number">0.04</span><span class="token punctuation">)</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>heal<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'治愈'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dead<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'死亡'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 参数分别为：</span><span class="token comment" spellcheck="true"># 1.横坐标（一个list）</span><span class="token comment" spellcheck="true"># 2.纵坐标（一个list）</span><span class="token comment" spellcheck="true"># 3.图例（label）</span><span class="token comment" spellcheck="true"># 4.线宽</span><span class="token comment" spellcheck="true"># 5.线条颜色</span><span class="token comment" spellcheck="true"># 6.点型（如字母'o'为实心圈，小数点'.'为小点）</span><span class="token comment" spellcheck="true"># 7.点的颜色（强行指定数值为RGB换算为0~1之间的一个实数）</span><span class="token comment" spellcheck="true"># 8.点的大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-4-其他参数"><a href="#2-7-4-其他参数" class="headerlink" title="2.7.4 其他参数"></a>2.7.4 其他参数</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 横轴显示的汉字</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'日期'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 纵轴显示的汉字</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'人数'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图表题目</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'疫情数据图'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 坐标轴</span>plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span> which<span class="token operator">=</span><span class="token string">'major'</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 开启图例</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-5-设置图像大小"><a href="#2-7-5-设置图像大小" class="headerlink" title="2.7.5 设置图像大小"></a>2.7.5 设置图像大小</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 长宽数值</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-7-6-绘制"><a href="#2-7-6-绘制" class="headerlink" title="2.7.6 绘制"></a>2.7.6 绘制</h3><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-8-list操作"><a href="#2-8-list操作" class="headerlink" title="2.8 list操作"></a>2.8 list操作</h2><h3 id="2-8-1-list遍历"><a href="#2-8-1-list遍历" class="headerlink" title="2.8.1 list遍历"></a>2.8.1 list遍历</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 方法一</span><span class="token keyword">for</span> i <span class="token keyword">in</span> list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法二</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#或者直接range(len(list))</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法三（逆序）</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>永远要记住：<strong>前闭后开</strong>！！！</p></blockquote><h3 id="2-8-2-元素插入"><a href="#2-8-2-元素插入" class="headerlink" title="2.8.2 元素插入"></a>2.8.2 元素插入</h3><h4 id="2-8-2-1-尾部插入"><a href="#2-8-2-1-尾部插入" class="headerlink" title="2.8.2.1 尾部插入"></a>2.8.2.1 尾部插入</h4><pre class="line-numbers language-python"><code class="language-python">list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>element<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-8-2-2-指定位置插入"><a href="#2-8-2-2-指定位置插入" class="headerlink" title="2.8.2.2 指定位置插入"></a>2.8.2.2 指定位置插入</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 正序：</span>list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>pos<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 逆序：</span>list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token operator">-</span>pop<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>list</code>在使用<code>.insert()</code>方法插入元素时会把所有元素顺序或逆序移动</p></blockquote><h1 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h1><h2 id="3-1-第一个正式版本"><a href="#3-1-第一个正式版本" class="headerlink" title="3.1 第一个正式版本"></a>3.1 第一个正式版本</h2><p>基于html源码，只做基本的数据信息反馈：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> os<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在更新数据......"</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://news.163.com/special/epidemic/'</span>down <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    func<span class="token punctuation">.</span>write<span class="token punctuation">(</span>down<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    data <span class="token operator">=</span> func<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    city_start <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;strong>'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> city_start <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    city_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/strong>'</span><span class="token punctuation">)</span>    city <span class="token operator">=</span> data<span class="token punctuation">[</span>city_start<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">:</span>city_end<span class="token punctuation">]</span>    line_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/li>'</span><span class="token punctuation">,</span>city_end<span class="token punctuation">)</span>    info <span class="token operator">=</span> data<span class="token punctuation">[</span>city_end<span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">:</span>line_end<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>city <span class="token operator">+</span> <span class="token string">'\t\t'</span> <span class="token operator">+</span> info<span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&lt;strong>'</span><span class="token punctuation">,</span><span class="token string">'used'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&lt;/strong>'</span><span class="token punctuation">,</span><span class="token string">'used'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;div class="tit">数据统计&lt;span>'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/span>'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n\n数据统计\t'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">27</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;p>'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/p>'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;p>'</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/p>'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"数据来源：网易新闻"</span><span class="token punctuation">)</span>input<span class="token punctuation">(</span><span class="token string">"按Enter键以退出..."</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-2-第二个正式版本"><a href="#3-2-第二个正式版本" class="headerlink" title="3.2 第二个正式版本"></a>3.2 第二个正式版本</h2><p><strong>可以画图啦</strong>！</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在搭建环境......\n\n\n"</span><span class="token punctuation">)</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> os<span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltos<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在更新数据......"</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://news.163.com/special/epidemic/'</span>down <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    func<span class="token punctuation">.</span>write<span class="token punctuation">(</span>down<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> func<span class="token punctuation">:</span>    data <span class="token operator">=</span> func<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>confirm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>suspect <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>heal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>dead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">,</span><span class="token string">'viewed'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'confirm'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>    b_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span>    c <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'suspect'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>    c_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span>    d <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'heal'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>    d_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span>    e <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'dead'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>    e_end <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span>e_end<span class="token number">-1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'}'</span><span class="token punctuation">:</span>        e_end <span class="token operator">=</span> e_end<span class="token number">-1</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">:</span>a<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    confirm<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>data<span class="token punctuation">[</span>b<span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">:</span>b_end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suspect<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>data<span class="token punctuation">[</span>c<span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">:</span>c_end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    heal<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>data<span class="token punctuation">[</span>d<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">:</span>d_end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    dead<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>data<span class="token punctuation">[</span>e<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">:</span>e_end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">,</span><span class="token string">'viewed'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;div class="tit">数据统计&lt;span>'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/span>'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n\n数据统计\t'</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">27</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;p>'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/p>'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>a <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;p>'</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span>b <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'&lt;/p>'</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">:</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>confirm<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'确诊'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>suspect<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'疑似'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.94</span><span class="token punctuation">,</span><span class="token number">0.88</span><span class="token punctuation">,</span><span class="token number">0.04</span><span class="token punctuation">)</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>heal<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'治愈'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>dead<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'死亡'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'日期'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'人数'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'疫情数据图'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span> which<span class="token operator">=</span><span class="token string">'major'</span><span class="token punctuation">,</span> labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"数据来源：网易新闻"</span><span class="token punctuation">)</span>input<span class="token punctuation">(</span><span class="token string">"按Enter键以退出..."</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-效果展示"><a href="#4-效果展示" class="headerlink" title="4.效果展示"></a>4.效果展示</h1><h2 id="4-1-网易源网站（2020-02-02-约16-00）"><a href="#4-1-网易源网站（2020-02-02-约16-00）" class="headerlink" title="4.1 网易源网站（2020/02/02 约16:00）"></a>4.1 网易源网站（2020/02/02 约16:00）</h2><h3 id="网站链接"><a href="#网站链接" class="headerlink" title="网站链接"></a><a href="http://news.163.com/special/epidemic" target="_blank" rel="noopener">网站链接</a></h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202161614.png" alt="顶部"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202161742.png" alt="地图"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202161818.png" alt="图表1"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202161910.png" alt="图表2"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202161957.png" alt="网页数据"></p><h2 id="4-2-本地运行结果"><a href="#4-2-本地运行结果" class="headerlink" title="4.2 本地运行结果"></a>4.2 本地运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202162155.png" alt="程序界面"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202162244.png" alt="本地绘制图表"></p><h1 id="5-一些奇技淫巧"><a href="#5-一些奇技淫巧" class="headerlink" title="5. 一些奇技淫巧"></a>5. 一些奇技淫巧</h1><p>绘图控件左下角的这个按钮有惊喜：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202162408.png" alt="按键"></p><p>按下按键后可以按下鼠标右键不放，<strong>右移拉大横轴比例尺，左移缩小</strong></p><p>鼠标右键<strong>上移拉大纵轴比例尺，下移缩小</strong></p><p>然后就可以想怎么看怎么看，数据更加直观！</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200202162707.png" alt="示范"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用python自动化完成学校的问卷任务</title>
      <link href="/2020/01/25/wen-juan-xing/"/>
      <url>/2020/01/25/wen-juan-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="1-起因："><a href="#1-起因：" class="headerlink" title="1. 起因："></a>1. 起因：</h1><p>由于近期新型冠状病毒（2019-nCoV）肆虐，学校要求每天早9点之前提交问卷星上发布的一个问卷，然而对于我这样一个不能早起的人来说过于困难。于是我想有没有一种办法让程序代替我完成这一项工作呢？</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/Snipaste_2020-01-25_23-43-57.png" alt="问卷星"></p><h1 id="2-艰辛的实践："><a href="#2-艰辛的实践：" class="headerlink" title="2. 艰辛的实践："></a>2. 艰辛的实践：</h1><h2 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作"></a>2.1 准备工作</h2><h3 id="2-1-1-Selenium"><a href="#2-1-1-Selenium" class="headerlink" title="2.1.1 Selenium"></a>2.1.1 Selenium</h3><p>由于先前没有接触过python自动化方面的内容，只是对语法有基本的了解，对于Socket接口之类的什么都不懂，于是果断开始在网上找方法，但每一个都看不懂。最后我只好从基础开始学起，认识了一个叫做<strong>Selenium</strong>的自动化库，于是果断：</p><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> selenium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里我使用的是<code>python 3.7.2 (64 bit)</code>，内置的 pip 已提前升级至最新版。</p><h3 id="2-1-2-ChromeDriver"><a href="#2-1-2-ChromeDriver" class="headerlink" title="2.1.2 ChromeDriver"></a>2.1.2 ChromeDriver</h3><p>Selenium是依赖各个浏览器进行工作的，而开启浏览器就必须手动指定路径，为了让代码能够跨主机进行运行，只好麻烦用户提前做准备了。于是诞生了针对Google Chrome浏览器进行适配的<code>ChromeDriver</code>，有了这个小程序，就可以更加流畅的调用·WebDriver·类进行各类操作。</p><h4 id="ChromeDriver官方下载地址（淘宝镜像）"><a href="#ChromeDriver官方下载地址（淘宝镜像）" class="headerlink" title="ChromeDriver官方下载地址（淘宝镜像）"></a><a href="http://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">ChromeDriver<del>官方</del>下载地址（淘宝镜像）</a></h4><blockquote><p>注：一定要看清版本号！！！（小版本一定范围内是兼容的）</p></blockquote><p>例如我的：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200126000031.png" alt="Chrome版本"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/20200126000225.png" alt="对应Driver版本"></p><p><strong>下载时选择<code>win32.exe</code>，把下载好后的的exe解压到python的安装目录下（我的是<code>C:\Program Files\Python37\Scripts</code>）或者手动将Driver添加到path环境变量也可。</strong></p><h3 id="2-1-3-VS-code"><a href="#2-1-3-VS-code" class="headerlink" title="2.1.3 VS code"></a>2.1.3 VS code</h3><p>之所以用VS code是因为VS的代码补全能力相当的强大，在接下来的编写过程中我们会遇到各种各样特别长的接口/函数名称，请做好准备。</p><h2 id="2-2-开始编写"><a href="#2-2-开始编写" class="headerlink" title="2.2 开始编写"></a>2.2 开始编写</h2><h4 id="想说的全写在注释里了。"><a href="#想说的全写在注释里了。" class="headerlink" title="想说的全写在注释里了。"></a>想说的全写在注释里了。</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 运行环境：</span><span class="token comment" spellcheck="true"># 1.Windows 10 64 位</span><span class="token comment" spellcheck="true"># 2.python 3.7.2 (64bit) + selenium自动化库</span><span class="token comment" spellcheck="true"># 3.Chrome 79.0.3945.130 (64bit)</span><span class="token comment" spellcheck="true"># 4.重点：ChromeDriver对应版本</span><span class="token comment" spellcheck="true"># 5.编辑器：VS Code（极不情愿地使用了）</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment" spellcheck="true"># 启动浏览器</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 指定url，替换数字</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.wjx.cn/jq/数字.aspx"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取所有问题的标签，存到一个list里边</span>answers <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">'.div_question'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 问题1：日期（iframe控件）</span><span class="token comment" spellcheck="true"># 点击调用控件</span>a <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 等待页面响应（好像不加也没关系）</span>driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 切换到iframe控件模式</span>driver<span class="token punctuation">.</span>switch_to_frame<span class="token punctuation">(</span><span class="token string">"__calendarIframe"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 找到“今天”的标签</span>a1 <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'selectTodayButton'</span><span class="token punctuation">)</span>a1<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 点击</span><span class="token comment" spellcheck="true"># 切换回主目录模式</span>driver<span class="token punctuation">.</span>switch_to_default_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 问题2：填空</span>a <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'想要填进去的文本'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 注意一定要以UTF-8形式保存</span><span class="token comment" spellcheck="true"># 问题3：单选框</span><span class="token comment" spellcheck="true"># 找到对应选项</span>a <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">'option'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 中括号的数字对应不同选项，1=第一个选项，依次递增</span>c <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>c<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 如果这一页的已经填完，浏览器找不到标签，让浏览器滚动到某一个标签</span><span class="token comment" spellcheck="true"># 括号内逗号后是标签的名称</span>driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].scrollIntoView();"</span><span class="token punctuation">,</span>YourTag<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 问题4：选择</span><span class="token comment" spellcheck="true"># li标签是选择题的标志</span>a <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>find_elements_by_css_selector<span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 下一行数字 0=选项1 1=选项2，递推</span>c <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>c<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 自动点击提交</span>sub <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span><span class="token string">'#submit_button'</span><span class="token punctuation">)</span>sub<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 退出浏览器</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="那些年遇到的坑："><a href="#那些年遇到的坑：" class="headerlink" title="那些年遇到的坑："></a>那些年遇到的坑：</h4><ol><li><code>iframe</code>控件根本就不能用常规方法调用，为这个我抓狂了一个小时</li><li>找到元素并不一定要一层一层地找，只要这个元素足够唯一，可以依据css、id、class等直接跨层查找（这里的层是html源码里的层次）</li><li>这些元素名需要一点一点在开发者模式里找，学会了之后可以更加简洁，甚至一个for循环解决不同题型</li><li>如果要产生许多许多的问卷可以引入random库，然后嘿嘿<del>~</del></li><li>要留意一些存在逻辑关联的题型，在本程序做出选择后html源码会立即变化，然后就等着报错吧<del>~</del></li><li>问卷星已经低级到非常容易搞定了，反爬措施几乎为0，加油吧！</li></ol><h1 id="3-结语"><a href="#3-结语" class="headerlink" title="3. 结语"></a>3. 结语</h1><p>在查找源码的过程中发现许多人做这方面的研究是为了应付研究生项目，数量庞大的问卷实在不好完成，又不肯总是麻烦别人。我认为这对于一个人的组织能力也是种挑战，应当坦然接受，迎难而上，求爷爷告奶奶也要把问卷发完，保证调查的真实性。而不是用随机的方式凑数。</p><p>类似的代码还有用<code>JavaScript + 油猴（TamperMonkey）</code>做成的，WebDriver绝对不是最好的方式，希望以后自己能学习到更多Python-Web编程的知识。</p><h5 id="最后，强烈谴责某些网站上付费代刷问卷调查的一些人！！！"><a href="#最后，强烈谴责某些网站上付费代刷问卷调查的一些人！！！" class="headerlink" title="最后，强烈谴责某些网站上付费代刷问卷调查的一些人！！！"></a>最后，强烈谴责某些网站上付费代刷问卷调查的一些人！！！</h5><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p>百度“问卷星自动填写”，你能找到的基本上我都参考了（泪）。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft配置合集</title>
      <link href="/2020/01/18/minecraft/"/>
      <url>/2020/01/18/minecraft/</url>
      
        <content type="html"><![CDATA[<h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h1><h2 id="1-1-运行环境"><a href="#1-1-运行环境" class="headerlink" title="1.1 运行环境"></a>1.1 运行环境</h2><h3 id="1-1-1-Windows-10-64位-Java-8-64位"><a href="#1-1-1-Windows-10-64位-Java-8-64位" class="headerlink" title="1.1.1 Windows 10 64位 + Java 8 64位"></a>1.1.1 Windows 10 64位 + <strong>Java 8 64位</strong></h3><p>注意Java 8的选择是因为要运行1.12版本，如果是最新版本的MC应该可以支持Java 10</p><p>(如果非64位在运行游戏时内存无法调至2G以上且限制诸多，强烈建议使用64位Java，Java的下载非常麻烦，我使用的是别人打包好的Java 8 Update 202)</p><h3 id="1-1-2-MC启动器"><a href="#1-1-2-MC启动器" class="headerlink" title="1.1.2 MC启动器"></a>1.1.2 MC启动器</h3><p>这里推荐采用github上的一个开源项目<strong>HMCL</strong>，完全依赖Java 系列版本进行开发，界面简洁美观无恶意广告，且支持几乎所有版本的Minecraft并附带相应Mod包管理器。</p><p>最重要的是支持离线模式运行，完美逃避付费困扰。（不过自然没办法加入联机服务器了）</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/79c6d24c0d1f02b44ea2e83099828b6a.png" alt="软件主页"></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/93a51c322b52c34bd7db0ed3b866fcc6.png" alt="版权信息"></p><p><strong><a href="https://github.com/huanghongxun/HMCL" target="_blank" rel="noopener">项目地址</a></strong></p><hr><h2 id="1-2-安装选项"><a href="#1-2-安装选项" class="headerlink" title="1.2 安装选项"></a>1.2 安装选项</h2><h3 id="参考配置："><a href="#参考配置：" class="headerlink" title="参考配置："></a>参考配置：</h3><ol><li>全局游戏配置：物理内存 4096MB</li><li>MC版本：1.12.2稳定版</li><li>Forge版本：1.12.2—14.23.2 （方便对应MOD）</li><li>OptFine：最新稳定版即可</li></ol><h1 id="2-MOD配置"><a href="#2-MOD配置" class="headerlink" title="2. MOD配置"></a>2. MOD配置</h1><h2 id="2-1-RTM（Real-Train-Mod）"><a href="#2-1-RTM（Real-Train-Mod）" class="headerlink" title="2.1 RTM（Real Train Mod）"></a>2.1 RTM（Real Train Mod）</h2><p>相关资源链接：<a href="https://tieba.baidu.com/f?kw=minecraft_realtrainmod" target="_blank" rel="noopener">百度RTM吧</a></p><h3 id="2-1-1-介绍"><a href="#2-1-1-介绍" class="headerlink" title="2.1.1 介绍"></a>2.1.1 介绍</h3><p>RTM，来自日本某大佬的真实火车MOD，可以控制火车材质参数等，还内置了火车站建设所需的一切工具，隐藏了枪械、飞机等彩蛋。</p><p>原帖链接见贴吧，全程需要-Wall，下载地址则在CurseForge，一直用的是较为稳定的1.12.2版本。</p><p>RTM MOD包含一个不得不装的依赖库和一个地形快速编辑MOD，比MC的指令要快很多，通过快捷键操作就可以快速进行建造、毁坏、地形修改等操作。具体来说是如下三个MOD（按照我下载时的原始文件名）：</p><ol><li>RTM2.4.8-27_forge-1.12.2-14.23.2.2611.jar</li><li>NGTLib2.4.3-20_forge-1.12.2-14.23.2.2611.jar</li><li>MCTE2.4.3-17_forge-1.12.2-14.23.2.2611.jar</li></ol><blockquote><p>注：NGTLib是原MOD的依赖库，必须要安装。MCTE就是地形编辑器MOD，之前的一些版本据说要输入激活码，否则会在游戏界面右上角不断供滚动文字，但不知道为什么一直没遇见，估计现在不需要激活了。</p></blockquote><h3 id="2-1-2-安装"><a href="#2-1-2-安装" class="headerlink" title="2.1.2 安装"></a>2.1.2 安装</h3><p>这不是废话，直接把.jar文件拖到<code>mods</code>文件夹不就完了。</p><h3 id="2-1-3-有关追加包"><a href="#2-1-3-有关追加包" class="headerlink" title="2.1.3 有关追加包"></a>2.1.3 有关追加包</h3><p>追加包的下载建议在贴吧上找，上面有很多优秀的追加包，如和谐号、上海地铁等。安装方式与Mod相同，放入<code>mods</code>文件夹即可。</p><p>贴吧上的各位大佬都对版权问题极为重视，不得随意传播追加包，且公开发图的时候必须注明使用的是谁制作的追加包，因此千万不要说是我告诉你的。</p><p><strong>常用追加包修改：</strong></p><p>这里主要关注的是速度和加速度这两个项目，因为一不小心就会超速然后区块加载器爆掉，然后你的电脑就差不多报废了。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/c272f71a1a075da6af288c9599eeabac.png" alt="json内容"></p><p>追加包压缩包<code>mods</code>文件夹一直打开，最底层每个车都会有一个.json文件，在记事本里编辑就好。<strong>maxSpeed</strong>是每一个档位的最大速度，每项数值乘以100可以理解为km/h，实际感受就是创造模式下全速开疾跑飞行的速度大约感受为0.80.</p><p>加速度默认就好，不可过大（转弯时极易侧翻）。</p><h3 id="2-1-4-使用教程"><a href="#2-1-4-使用教程" class="headerlink" title="2.1.4 使用教程"></a>2.1.4 使用教程</h3><p>具体教程可以b站搜索。这里说几个坑：</p><ol><li>上车巨难上，必须右键找准位置</li><li>W、S键调的只是档位，切勿操之过急</li><li>转弯半径要大，火车的爬坡能力没有你想象的那么好</li></ol><h3 id="2-1-5-晒图时间到"><a href="#2-1-5-晒图时间到" class="headerlink" title="2.1.5 晒图时间到"></a>2.1.5 晒图时间到</h3><p>（我也不管什么版权了）</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/2019-07-20_19.22.39.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/2019-07-20_19.24.53.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/2019-10-04_15.49.45.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/wjsoj/pic/img/2019-10-04_15.50.12.png" alt=""></p><h2 id="2-2-其他MOD"><a href="#2-2-其他MOD" class="headerlink" title="2.2 其他MOD"></a>2.2 其他MOD</h2><h3 id="2-2-1-journeymap"><a href="#2-2-1-journeymap" class="headerlink" title="2.2.1  journeymap"></a>2.2.1  journeymap</h3><p>极其好用的小地图mod，可以显示周围生物，设置WayPoints（被僵尸撸死之前逃生的利器），绘制地形，还有更多精美主题等你探索<del>~</del></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://oss.minecraftxz.com/wp-content/uploads/2017/08/430716ff5ea80255dacab7564e7acda5.jpg" alt="网上找的图"></p><p><strong>缺点：</strong>所有地图间数据是通用的，也就是说要想发挥这个mod的最大功效，从此就只能玩一个地图，目前还未尝试寻找解决方法。（反正一般我也不用）</p><h3 id="2-2-2-JEI物品管理器"><a href="#2-2-2-JEI物品管理器" class="headerlink" title="2.2.2 JEI物品管理器"></a>2.2.2 JEI物品管理器</h3><p>话说这个JEI跟NEI有什么区别，还有为什么我不会取东西了？</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://nie.res.netease.com/r/pic/20180613/181a4a55-12b2-4d7a-b1b0-f326f0a44a7f.png" alt="网上找的图"></p><h3 id="2-2-3-Hwyla（Here’s-What-You’re-Looking-At）"><a href="#2-2-3-Hwyla（Here’s-What-You’re-Looking-At）" class="headerlink" title="2.2.3 Hwyla（Here’s What You’re Looking At）"></a>2.2.3 Hwyla（<strong>Here’s What You’re Looking At</strong>）</h3><p>你看啥就显示啥。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://oss.minecraftxz.com/wp-content/uploads/2017/08/3f0694debd4c2dc4eb428ecfff98fde7.png" alt="熔炉"></p><p>此外看向生物体时会显示血量，看向村民会显示职业，还可以预览箱子中物品。</p><h3 id="2-2-4-Waila-Harvestability-Mod"><a href="#2-2-4-Waila-Harvestability-Mod" class="headerlink" title="2.2.4 Waila-Harvestability-Mod"></a>2.2.4 Waila-Harvestability-Mod</h3><p>Hwyla是Waila的一个前置，界面相似（根本就是一模一样），可以显示当前方块能否被挖掘破坏，应该用什么工具破坏。</p><h1 id="3-光影"><a href="#3-光影" class="headerlink" title="3. 光影"></a>3. 光影</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/d8c3b71e642a750c429900f78d022a85.png" alt="Snipaste_2020-01-19_00-50-23.png"></p><p>作为伸手党从52pojie上下载的整合包，放在<code>resourcepacks</code>文件夹中，打开游戏后在Optfine中决定是否开启即可。</p><p>记得一定要优化图形设置，不然显卡会爆掉。</p><h1 id="4-MC指令合集"><a href="#4-MC指令合集" class="headerlink" title="4. MC指令合集"></a>4. MC指令合集</h1><h2 id="4-1-游戏规则修改"><a href="#4-1-游戏规则修改" class="headerlink" title="4.1 游戏规则修改"></a>4.1 游戏规则修改</h2><p>游戏规则指令：<code>/gamerule</code></p><p>其后传递的是一个布尔值</p><ol><li><strong>doDaylightCycle</strong> 时间是否流动</li><li><strong>doFireTick</strong> 火线是否蔓延</li><li><strong>doMobLoot</strong> 怪物物品是否掉落</li><li><strong>doMobSpawning</strong> 怪物是否自动生成</li><li><strong>doTileDrops</strong> 破坏物品是否掉落方块</li><li><strong>keepInventory</strong> 死亡物品是否保存</li><li><strong>mobGrfiefing</strong> 怪物是否破坏地形</li><li><strong>naturalRegeneration</strong> 满饱食度是否自动回复生命值</li><li><strong>showDeathMessages</strong> 显示死亡消息</li></ol><p>示例：<code>/gamerule keepInventory true</code></p><blockquote><p>注意！<code>/gamerule</code>指令强制区分大小写</p></blockquote><h2 id="4-2-作弊指令"><a href="#4-2-作弊指令" class="headerlink" title="4.2 作弊指令"></a>4.2 作弊指令</h2><h3 id="4-2-1-gamemode"><a href="#4-2-1-gamemode" class="headerlink" title="4.2.1 gamemode"></a>4.2.1 gamemode</h3><p><code>/gamemode 0</code>切生存</p><p><code>/gamemode 1</code>切创造</p><h3 id="4-2-2-无中生有"><a href="#4-2-2-无中生有" class="headerlink" title="4.2.2 无中生有"></a>4.2.2 无中生有</h3><p><strong>给予附魔物品例子</strong>：<code>/give @p minecraft:diamond_sword 1 0 {ench:[{id:17,lvl:127},{id:18,lvl:127}]}</code><br>0为数据值，如附魔金苹果数据值为<code>1</code>，金苹果则为<code>0</code>。</p><h4 id="4-2-2-1-附魔ID："><a href="#4-2-2-1-附魔ID：" class="headerlink" title="4.2.2.1 附魔ID："></a>4.2.2.1 附魔ID：</h4><h5 id="装备："><a href="#装备：" class="headerlink" title="装备："></a>装备：</h5><p>　　0 - 防御，Protection (头盔，装甲，鞋子，裤子)<br>　　1 - 火焰防御，Fire Protection (头盔，装甲，鞋子，裤子)<br>　　2 - 摔伤减半，Feather Falling (鞋子)<br>　　3 - 爆炸防御，Blast Protection (头盔，装甲，鞋子，裤子)<br>　　4 - 远程攻击防御，Projectile Protection (头盔，装甲，鞋子，裤子)<br>　　5 - 水下呼吸，Respiration (头盔)<br>　　6 - 水下挖掘，Aqua Affinity (头盔)<br>　　7 - 伤害反射，Thorns (头盔，装甲，鞋子，裤子)　</p><h5 id="武器-剑-："><a href="#武器-剑-：" class="headerlink" title="武器 (剑)："></a>武器 (剑)：</h5><p>　　16 - 锋利，Sharpness (剑)<br>　　17 - 亡灵杀手，Smite (剑)<br>　　18 - 节肢杀手，Bane Of Arthropods (剑)<br>　　19 - 击退，Knock Back (剑)<br>　　20 - 火元素，Fire Aspect (剑)<br>　　21 - 掉落品加倍，Looting (剑)</p><h5 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h5><p>　　32 - 挖掘效率，Efficiency (稿子，斧子，铲子)<br>　　33 - 精准采集，Silk Touch (稿子，斧子，铲子)<br>　　34 - 不毁，Unbreaking (稿子，斧子，铲子，武器，装备)<br>　　35 - 幸运挖掘，Fortune (稿子，斧子，铲子)</p><h5 id="武器-弓箭-："><a href="#武器-弓箭-：" class="headerlink" title="武器 (弓箭)："></a>武器 (弓箭)：</h5><p>　　48 - 力量，Power (弓箭)<br>　　49 - 弓箭击退，Punch (弓箭)<br>　　50 - 火元素，Flame (弓箭)<br>　　51 - 无限弓箭，Infinity (弓箭)</p><blockquote><p>注：<strong>附魔等级最高为<code>32767</code></strong>（浓浓的Java味）</p></blockquote><h4 id="4-2-2-2常用例子（全部精心修改）："><a href="#4-2-2-2常用例子（全部精心修改）：" class="headerlink" title="4.2.2.2常用例子（全部精心修改）："></a>4.2.2.2常用例子（全部精心修改）：</h4><pre><code>/give @p minecraft:golden_apple 64 1/give @p minecraft:diamond_sword 1 0         {ench:[{id:17,lvl:32767},{id:16,lvl:32767},{id:18,lvl:32767},{id:19,lvl:3},{id:20,lvl:32767},{id:21,lvl:5},{id:34,lvl:32767}]}/give @p minecraft:diamond_helmet 1 0         {ench:[{id:0,lvl:32767},{id:1,lvl:32767},{id:2,lvl:32767},{id:3,lvl:32767},{id:4,lvl:32767},{id:7,lvl:32767},{id:34,lvl:32767},{id:6,lvl:32767},{id:5,lvl:32767}]}/give @p minecraft:diamond_chestplate 1 0     {ench:[{id:0,lvl:32767},{id:1,lvl:32767},{id:2,lvl:32767},{id:3,lvl:32767},{id:4,lvl:32767},{id:7,lvl:32767},{id:34,lvl:32767},{id:6,lvl:32767},{id:5,lvl:32767}]}/give @p minecraft:diamond_leggings 1 0     {ench:[{id:0,lvl:32767},{id:1,lvl:32767},{id:2,lvl:32767},{id:3,lvl:32767},{id:4,lvl:32767},{id:7,lvl:32767},{id:34,lvl:32767},{id:6,lvl:32767},{id:5,lvl:32767}]}/give @p minecraft:diamond_boots 1 0         {ench:[{id:0,lvl:32767},{id:1,lvl:32767},{id:2,lvl:32767},{id:3,lvl:32767},{id:4,lvl:32767},{id:7,lvl:32767},{id:34,lvl:32767},{id:6,lvl:32767},{id:5,lvl:32767}]}/give @p minecraft:diamond_shovel 1 0         {ench:[{id:32,lvl:3},{id:34,lvl:32767},{id:35,lvl:7}]}/give @p minecraft:diamond_hoe 1 0         {ench:[{id:32,lvl:3},{id:34,lvl:32767},{id:35,lvl:7}]}/give @p minecraft:diamond_axe 1 0         {ench:[{id:32,lvl:3},{id:34,lvl:32767},{id:35,lvl:7}]}/give @p minecraft:diamond_pickaxe 1 0         {ench:[{id:32,lvl:3},{id:17,lvl:32767},{id:18,lvl:32767},{id:34,lvl:32767},{id:35,lvl:7}]}/give @p minecraft:bow 1 0             {ench:[{id:17,lvl:32767},{id:18,lvl:32767},{id:48,lvl:32767},{id:50,lvl:32767},{id:51,lvl:32767},{id:49,lvl:3},{id:34,lvl:32767}]}</code></pre><h3 id="4-2-3-嗑药大法"><a href="#4-2-3-嗑药大法" class="headerlink" title="4.2.3 嗑药大法"></a>4.2.3 嗑药大法</h3><h4 id="effect-玩家-效果-时间-倍数"><a href="#effect-玩家-效果-时间-倍数" class="headerlink" title="/effect 玩家 效果 时间 倍数"></a><code>/effect</code> 玩家 效果 时间 倍数</h4><h4 id="效果ID-（-注释为倍数X1）："><a href="#效果ID-（-注释为倍数X1）：" class="headerlink" title="效果ID （ 注释为倍数X1）："></a>效果ID （ 注释为倍数X1）：</h4><p><strong>1 速度</strong> 注释：增加视野（FOV）,提升速度%20</p><p><strong>2 缓慢</strong> 注释：缩小视野（FOV），速度减慢%15</p><p><strong>3 急迫</strong> 注释：方块挖掘速度提升%20（手臂挥动得更快）</p><p><strong>4 挖掘疲劳</strong> 注释：方块挖掘速度减少%20（手臂挥动得更慢）</p><p><strong>5 力量</strong> 注释：近身攻击造成的伤害提高130%</p><p><strong>6 瞬间治疗</strong> 注释：瞬间恢复4（❤❤）</p><p><strong>7 瞬间伤害</strong> 注释：瞬间造成6（❤❤❤）</p><p><strong>8 跳跃提升</strong> 注释：允许玩家跳得更高</p><p><strong>9 反胃</strong> 注释：导致视野摇晃和扭曲</p><p><strong>10 生命恢复</strong> 注释：每50刻恢复（❤❤❤）</p><p><strong>11 抗性提升</strong> 注释：减少所有受到的伤害20%</p><p><strong>12 防火</strong> 注释：对货和岩浆免疫</p><p><strong>13 水下呼吸</strong> 注释：氧气条件在水下不会减少</p><p><strong>14 隐身</strong> 注释：导致实体消失，除非你直接接触他们，否则生物不会攻击你。如果你穿任何一件盔甲，生物最远能在一米外见到你，在此每增加一件盔甲这个距离将增加3米，当你穿整套盔甲时距离为10米。（无效果时为15米）</p><p><strong>15 失明</strong> 注释：在玩家身边创造出黑色浓雾，禁止疾跑和暴击。</p><p><strong>16 夜视</strong> 注释：增加亮度，增加水下视野</p><p><strong>17 饥饿</strong> 注释：导致食物表更快耗尽（每刻增加0.025饥饿等级）</p><p><strong>18 虚弱</strong> 注释：近身攻击力降低3，受到此效果僵尸村民能使用金苹果治疗僵尸化，洞穴蜘蛛不会使目标中毒。</p><p><strong>19 中毒</strong> 注释：每25刻/1.25秒给予半颗心的伤害，生命条变绿，剩下半颗心将不会继续掉血。</p><p><strong>20 凋零</strong> 注释：凋零每40刻/2秒给予半颗心伤害。此效果能致命。生命条会变黑。</p><p><strong>21 生命提升</strong> 注释： 增加2颗心生命值，额外生命值会在效果结束时消失。</p><p><strong>22 伤害吸收</strong> 注释：添加2颗心生命值，这些生命值不会受到天然恢复或者其他效果影响，但每30秒无视剩余生命值的状态刷新一次，额外生命值会在效果结束时消失。</p><p><strong>23 饱和</strong> 注释：每刻恢复1饱食度。</p><h1 id="5-Enjoy-Minecrafting"><a href="#5-Enjoy-Minecrafting" class="headerlink" title="5. Enjoy Minecrafting!"></a>5. Enjoy Minecrafting!</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS code常用插件及编译系统配置</title>
      <link href="/2019/12/29/vs-code/"/>
      <url>/2019/12/29/vs-code/</url>
      
        <content type="html"><![CDATA[<h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><h3 id="1-Bracket-Pair-Colorizer"><a href="#1-Bracket-Pair-Colorizer" class="headerlink" title="1. Bracket Pair Colorizer"></a>1. Bracket Pair Colorizer</h3><p>如彩虹般顺滑的括号高亮匹配<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/88b5b15d527cedd07c6d84630bd6a71e.png" alt="1.png"></p><h3 id="2-C-C"><a href="#2-C-C" class="headerlink" title="2. C/C++"></a>2. C/C++</h3><p>基础插件<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/a78f24780e0cc211ab007db25a0aa340.png" alt="2.png"></p><h3 id="3-carbon-now-sh"><a href="#3-carbon-now-sh" class="headerlink" title="3. carbon-now-sh"></a>3. carbon-now-sh</h3><p>高端代码截图上传工具<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/b0d2a29552521f0f9cdb18f6b8ad73d0.png" alt="3.png"></p><h3 id="4-Chinese-Simplified-Language-Pack-for-Visual-Studio-Code"><a href="#4-Chinese-Simplified-Language-Pack-for-Visual-Studio-Code" class="headerlink" title="4. Chinese (Simplified) Language Pack for Visual Studio Code"></a>4. Chinese (Simplified) Language Pack for Visual Studio Code</h3><p>传说中的官方翻译，英文差者必备<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/accb1c988cb349e37f780083d73bc813.png" alt="4.png"></p><h3 id="5-Code-Runner"><a href="#5-Code-Runner" class="headerlink" title="5. Code Runner"></a>5. Code Runner</h3><p>比VS code自带编译系统好用n倍的顺手快速编译工具<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/126ea332eafdf2d2744a345e9ae6fbff.png" alt="5.png"></p><h3 id="6-filesize"><a href="#6-filesize" class="headerlink" title="6. filesize"></a>6. filesize</h3><p>为了找回sublime的感觉，在左下角显示文件大小的实用工具<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/6ef52ed99d7ead03bd60c24ba2a05866.png" alt="6.png"></p><h3 id="7-indent-rainbow"><a href="#7-indent-rainbow" class="headerlink" title="7. indent-rainbow"></a>7. indent-rainbow</h3><p>打造同样如彩虹般顺滑的对齐线，妈妈再也不用担心我的代码格式了<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/de79d66d7b780d29e5225c63b78f55b0.png" alt="7.png"></p><h3 id="8-Markdown-Preview-Enhanced"><a href="#8-Markdown-Preview-Enhanced" class="headerlink" title="8. Markdown Preview Enhanced"></a>8. Markdown Preview Enhanced</h3><p>Markdown即时预览，在Markdown编辑界面右键即可打开<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/6df8842230ebae2a367fd86fb35c5e1f.png" alt="8.png"></p><h3 id="9-PlatformIO-IDE"><a href="#9-PlatformIO-IDE" class="headerlink" title="9. PlatformIO IDE"></a>9. PlatformIO IDE</h3><p>好不容易才找到的一个汇编语言IDE<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/7395022e815cbeac0d2eae774806bdde.png" alt="9.png"></p><h3 id="10-Python"><a href="#10-Python" class="headerlink" title="10. Python"></a>10. Python</h3><p>基础插件<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/3816a256425e8d5146f471fd58a2c9dc.png" alt="10.png"></p><h3 id="11-Python-Indent"><a href="#11-Python-Indent" class="headerlink" title="11. Python Indent"></a>11. Python Indent</h3><p>当你按下回车后自动帮你修复python代码格式并对齐<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/5e9faabe086ef940d8e9b8ae98c5035c.png" alt="11.png"></p><h3 id="12-vscode-icons"><a href="#12-vscode-icons" class="headerlink" title="12. vscode-icons"></a>12. vscode-icons</h3><p>只是让图标更好看而已<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/b66a2e4458fcf3fc5e78a456d68de34e.png" alt="12.png"></p><h1 id="C-编译"><a href="#C-编译" class="headerlink" title="C++编译"></a>C++编译</h1><p>直接更改Runcodde设置即可，然后右键-&gt;Run Code<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/b1bdcad4f9e9fb01a73311c2f45d7d2c.png" alt="Run Code.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新华林问题</title>
      <link href="/2019/12/29/xin-hua-lin-wen-ti/"/>
      <url>/2019/12/29/xin-hua-lin-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="新华林问题验证"><a href="#新华林问题验证" class="headerlink" title="新华林问题验证"></a>新华林问题验证</h1><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>$$<br>对于质数p \ \   (p \neq 2,5,11)<br>$$</p><p>$$<br>必定存在\ \ p=x+y+z<br>$$</p><p>$$<br>使得\ \ x \ast y \ast z=w^3 (w \in N)<br>$$</p><h2 id="代码：（范围：1-10000）"><a href="#代码：（范围：1-10000）" class="headerlink" title="代码：（范围：1~10000）"></a>代码：（范围：1~10000）</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;set></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;conio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">bool</span> isprime<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ll prime<span class="token punctuation">[</span><span class="token number">5005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ll top<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">canfind</span><span class="token punctuation">(</span>ll x<span class="token punctuation">)</span><span class="token punctuation">{</span>    ll tx<span class="token operator">=</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// cout&lt;&lt;x&lt;&lt;" "&lt;&lt;tx&lt;&lt;endl;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tx<span class="token operator">*</span>tx<span class="token operator">*</span>tx<span class="token operator">==</span>x<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>tx<span class="token operator">&lt;&lt;</span><span class="token string">"^3        \t"</span><span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span><span class="token string">"        \t"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"write.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>isprime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>isprime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>isprime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            prime<span class="token punctuation">[</span>top<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span><span class="token number">10000</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            isprime<span class="token punctuation">[</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ll k<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">bool</span> ff<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>ll a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>a<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ff<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>ll b<span class="token operator">=</span>a<span class="token punctuation">;</span>b<span class="token operator">&lt;=</span><span class="token punctuation">(</span>k<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ll cc<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">-</span>b<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>cc<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">canfind</span><span class="token punctuation">(</span>a<span class="token operator">*</span>b<span class="token operator">*</span>cc<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    cout<span class="token operator">&lt;&lt;</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" = "</span><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>cc<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>                    ff<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// getch();    </span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更新：C-11-多线程"><a href="#更新：C-11-多线程" class="headerlink" title="更新：C++11 多线程"></a>更新：C++11 多线程</h2><p>使用 <code>#include &lt;thread&gt;</code> 头文件，并加入编译选项 <code>-std=c++11</code> ，注意<strong>mingw</strong>下编译无法通过，会提示你是否引用此头文件，但实际上无论是否引用总会编译错误，因此建议使用Linux原生<strong>gcc</strong>或者下载<strong>MinGW-W64</strong>编译版本。这次更新加入了20个线程对前5000个素数（实际素数大小大约到50000）进行分段处理，使得相同时间下运算时间大幅减少（就是cpu快要爆炸）。</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;set></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;conio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;thread></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">bool</span> isprime<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> prime<span class="token punctuation">[</span><span class="token number">50005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ll top<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">canfind</span><span class="token punctuation">(</span>ll x<span class="token punctuation">)</span><span class="token punctuation">{</span>    ll tx<span class="token operator">=</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tx<span class="token operator">*</span>tx<span class="token operator">*</span>tx<span class="token operator">==</span>x<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>tx<span class="token operator">&lt;&lt;</span><span class="token string">"^3        \t"</span><span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span><span class="token string">"        \t"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>l<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ll k<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">bool</span> ff<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>ll a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>a<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ff<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>ll b<span class="token operator">=</span>a<span class="token punctuation">;</span>b<span class="token operator">&lt;=</span><span class="token punctuation">(</span>k<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ll cc<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">-</span>b<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>cc<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">canfind</span><span class="token punctuation">(</span>a<span class="token operator">*</span>b<span class="token operator">*</span>cc<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    cout<span class="token operator">&lt;&lt;</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" = "</span><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>cc<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>                    ff<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// getch();    </span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"write.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>isprime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>isprime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">50000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>isprime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            prime<span class="token punctuation">[</span>top<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span><span class="token number">50000</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            isprime<span class="token punctuation">[</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//    cout&lt;&lt;top&lt;&lt;endll;</span>    thread <span class="token function">th1</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th2</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">251</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th3</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">501</span><span class="token punctuation">,</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th4</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">751</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th5</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token number">1250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th6</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">1251</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th7</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">1501</span><span class="token punctuation">,</span><span class="token number">1750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th8</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">1751</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th9</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">2001</span><span class="token punctuation">,</span><span class="token number">2250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th10</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">2251</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th11</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">2501</span><span class="token punctuation">,</span><span class="token number">2750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th12</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">2751</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th13</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">3001</span><span class="token punctuation">,</span><span class="token number">3250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th14</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">3251</span><span class="token punctuation">,</span><span class="token number">3500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th15</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">3501</span><span class="token punctuation">,</span><span class="token number">3750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th16</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">3751</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th17</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">4001</span><span class="token punctuation">,</span><span class="token number">4250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th18</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">4251</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th19</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">4501</span><span class="token punctuation">,</span><span class="token number">4750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    thread <span class="token function">th20</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span><span class="token number">4751</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th2<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th3<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th4<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th5<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th6<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th7<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th8<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th9<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th10<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th11<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th12<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th13<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th14<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th15<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th16<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th17<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th18<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th19<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    th20<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Working Time:  "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>CLOCKS_PER_SEC<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行效果：（By-AMD-Ryzen7-2700X）"><a href="#运行效果：（By-AMD-Ryzen7-2700X）" class="headerlink" title="运行效果：（By AMD Ryzen7 2700X）"></a>运行效果：（By AMD Ryzen7 2700X）</h3><p>原程序下跑50000：<strong>248.60s</strong><br>多线程下用时：    <strong>23.912s</strong></p><h3 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h3><h4 id="1-庞大的CPU占用率"><a href="#1-庞大的CPU占用率" class="headerlink" title="1.庞大的CPU占用率"></a>1.庞大的CPU占用率</h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/eaed7a30ba20c435fa6bcf771a0609b3.png" alt="CPU占用"></p><h4 id="2-乱序输出"><a href="#2-乱序输出" class="headerlink" title="2.乱序输出"></a>2.乱序输出</h4><p>正在尝试把所有结果统一存储，但这样还会加大内存负担，排序的用时也是不可接受的。此外，线程的插入顺序也有待改进，当前模式下必须等最慢的线程跑完才能结束进程，如果改进一下算法的话，应该有可能使每一个线程的结束时间相当，达到最大化效率。</p><h1 id="更新：V3-0"><a href="#更新：V3-0" class="headerlink" title="更新：V3.0"></a>更新：V3.0</h1><p>发现线程是可以用循环来创建的，同时可以将前面的线程全部<code>.detch</code>分离出去，只让最后一个线程挂载在主程序内运行。效率可以进一步提升。</p><p>效率：<strong>9.620s</strong></p><h3 id="代码如下：V3-0"><a href="#代码如下：V3-0" class="headerlink" title="代码如下：V3.0"></a>代码如下：V3.0</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;set></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;conio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Windows.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;thread></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">bool</span> isprime<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> prime<span class="token punctuation">[</span><span class="token number">50005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ll top<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>cnt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">canfind</span><span class="token punctuation">(</span>ll x<span class="token punctuation">)</span><span class="token punctuation">{</span>    ll tx<span class="token operator">=</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>tx<span class="token operator">*</span>tx<span class="token operator">*</span>tx<span class="token operator">==</span>x<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>tx<span class="token operator">&lt;&lt;</span><span class="token string">"^3        \t"</span><span class="token operator">&lt;&lt;</span>x<span class="token operator">&lt;&lt;</span><span class="token string">"        \t"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>l<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ll k<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">bool</span> ff<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>ll a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>a<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ff<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>ll b<span class="token operator">=</span>a<span class="token punctuation">;</span>b<span class="token operator">&lt;=</span><span class="token punctuation">(</span>k<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ll cc<span class="token operator">=</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">-</span>b<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>cc<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">canfind</span><span class="token punctuation">(</span>a<span class="token operator">*</span>b<span class="token operator">*</span>cc<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    cout<span class="token operator">&lt;&lt;</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" = "</span><span class="token operator">&lt;&lt;</span>a<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span><span class="token string">"+"</span><span class="token operator">&lt;&lt;</span>cc<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>                    cnt<span class="token operator">++</span><span class="token punctuation">;</span>                    ff<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"write.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>isprime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>isprime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">50000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>isprime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            prime<span class="token punctuation">[</span>top<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span><span class="token number">50000</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            isprime<span class="token punctuation">[</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 100线程循环拆分</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5000</span><span class="token punctuation">;</span>i<span class="token operator">+</span><span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        thread <span class="token function">a</span><span class="token punctuation">(</span>work<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">50</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">4951</span><span class="token punctuation">)</span>            a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            a<span class="token punctuation">.</span><span class="token function">detach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 总数（验证用）：</span>    cout<span class="token operator">&lt;&lt;</span>cnt<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Working Time:  "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>CLOCKS_PER_SEC<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime编译系统搭建与配置</title>
      <link href="/2019/12/21/sublime/"/>
      <url>/2019/12/21/sublime/</url>
      
        <content type="html"><![CDATA[<h2 id="一-配置环境变量"><a href="#一-配置环境变量" class="headerlink" title="一.配置环境变量"></a>一.配置环境变量</h2><p>将MinGW下的/bin路径加入系统环境变量Path中。<br>命令提示符输入”<strong><em>g++ -v</em></strong>“检查结果。</p><h2 id="二-添加编译系统所需文件"><a href="#二-添加编译系统所需文件" class="headerlink" title="二.添加编译系统所需文件"></a>二.添加编译系统所需文件</h2><h3 id="1-负责判断错误、显示命令提示符标题的”run-bat”"><a href="#1-负责判断错误、显示命令提示符标题的”run-bat”" class="headerlink" title="1.负责判断错误、显示命令提示符标题的”run.bat”"></a>1.负责判断错误、显示命令提示符标题的”run.bat”</h3><pre class="line-numbers language-bash"><code class="language-bash">@echo offtitle Running Your Program<span class="token keyword">if</span> %1<span class="token operator">==</span>0 <span class="token punctuation">(</span>    timer %2    <span class="token keyword">exit</span><span class="token punctuation">)</span><span class="token keyword">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-负责显示程序运行时间，给出错误反馈的”timer-exe”"><a href="#2-负责显示程序运行时间，给出错误反馈的”timer-exe”" class="headerlink" title="2.负责显示程序运行时间，给出错误反馈的”timer.exe”"></a>2.负责显示程序运行时间，给出错误反馈的”timer.exe”</h3><p>(请务必预先使用g++或其他IDE环境编译以下的cpp文件，时间显示部分可以自行配置，分割线等也可根据命令提示符窗口宽度做出调整)</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;conio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Windows.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>clock_t st<span class="token punctuation">,</span>en<span class="token punctuation">;</span><span class="token keyword">int</span> ret<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">get_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    SYSTEMTIME time<span class="token punctuation">;</span>    <span class="token function">GetLocalTime</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%4d/%02d/%02d %02d:%02d:%02d.%03d\n"</span><span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wYear<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wMonth<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wDay<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wHour<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wMinute<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wSecond<span class="token punctuation">,</span>        time<span class="token punctuation">.</span>wMilliseconds        <span class="token comment" spellcheck="true">/*time.wDayOfWeek*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n------------------------------------------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Finish Time: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">get_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    en<span class="token operator">=</span><span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Process exited after %.4f seconds with return value %d\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span>en<span class="token operator">-</span>st<span class="token punctuation">)</span><span class="token operator">/</span>CLOCKS_PER_SEC<span class="token punctuation">,</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Press any key to continue..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>argc<span class="token operator">!=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"ERROR!"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    string argv1<span class="token operator">=</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    argv1<span class="token operator">=</span><span class="token string">"\""</span><span class="token operator">+</span>argv1<span class="token operator">+</span><span class="token string">"\""</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>argv1<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Build Time: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">get_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    st<span class="token operator">=</span><span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------------------------\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ret<span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span>argv1<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-将以上的”run-bat”与”timer-exe”放入环境变量的路径当中，确保能够调用运行"><a href="#3-将以上的”run-bat”与”timer-exe”放入环境变量的路径当中，确保能够调用运行" class="headerlink" title="3.将以上的”run.bat”与”timer.exe”放入环境变量的路径当中，确保能够调用运行"></a>3.将以上的”run.bat”与”timer.exe”放入环境变量的路径当中，确保能够调用运行</h3><h2 id="三-sublime内部编译系统配置"><a href="#三-sublime内部编译系统配置" class="headerlink" title="三.sublime内部编译系统配置"></a>三.sublime内部编译系统配置</h2><p>这里将用到.sublime-build文件，请将下面的json内容保存至”<strong>C:\Users\Administrator\AppData\Roaming\Sublime Text 3\Packages\User</strong>“（路径请根据实际情况修改”Administrator”下的内容），在保存界面可以自行更改文件名称，这将成为编译系统的名称，我使用了MyCpp这个名称。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"cmd"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"g++"</span><span class="token punctuation">,</span> <span class="token string">"${file}"</span><span class="token punctuation">,</span> <span class="token string">"-o"</span><span class="token punctuation">,</span><span class="token string">"${file_path}/${file_base_name}"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"file_regex"</span><span class="token operator">:</span> <span class="token string">"^(..[^:]*):([0-9]+):?([0-9]+)?:?(.*)$"</span><span class="token punctuation">,</span>    <span class="token property">"working_dir"</span><span class="token operator">:</span> <span class="token string">"${file_path}"</span><span class="token punctuation">,</span>    <span class="token property">"encoding"</span><span class="token operator">:</span><span class="token string">"cp936"</span><span class="token punctuation">,</span>    <span class="token property">"selector"</span><span class="token operator">:</span> <span class="token string">"source.c++"</span><span class="token punctuation">,</span>    <span class="token property">"shell_cmd"</span><span class="token operator">:</span> <span class="token string">"g++ \"$file\" -o \"$file_base_name\" &amp;&amp; start run.bat %ERRORLEVEL% \"${file_path}/${file_base_name}\""</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四-享受成果与个性化配置"><a href="#四-享受成果与个性化配置" class="headerlink" title="四.享受成果与个性化配置"></a>四.享受成果与个性化配置</h2><h3 id="1-汉化、破解与常用插件安装"><a href="#1-汉化、破解与常用插件安装" class="headerlink" title="1.汉化、破解与常用插件安装"></a>1.汉化、破解与常用插件安装</h3><p>进入Sublime Text 3，按住键盘”<strong><em>Ctrl+Shift+P</em></strong>“，输入”<strong><em>pcip</em></strong>“(short for “Package Control:Install Package”)，如果没有安装过Package Control请按照选项”<strong><em>Install Package Control</em></strong>“进行安装。接下来等待一会儿应该会看到这样一个界面：<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/bddddf777a0ac157009db67cc44b4bf9.png" alt="Package Control界面"><br>这时我们要安装以下几个插件，在上面的搜索框中搜索，回车等待安装即可（如果发现很久也安装不了请自行<del>FanQiang</del>进行安装），包括：</p><h4 id="（1）-ChineseLocalizations"><a href="#（1）-ChineseLocalizations" class="headerlink" title="（1）.ChineseLocalizations"></a><strong>（1）.ChineseLocalizations</strong></h4><p>安装好后在顶部编辑栏”help-language”下进行语言更换</p><h4 id="（2）-ConverntToUTF-8"><a href="#（2）-ConverntToUTF-8" class="headerlink" title="（2）.ConverntToUTF-8"></a><strong>（2）.ConverntToUTF-8</strong></h4><p>这是一个支持UTF-8编码格式的转换插件。</p><h4 id="3-GBK-Support"><a href="#3-GBK-Support" class="headerlink" title="(3).GBK Support"></a><strong>(3).GBK Support</strong></h4><p>这是一个解决中文乱码的GBK编码格式支持插件。<br><strong>其他</strong><br>例如各种颜色主题”Theme - XXX”或配色方案”XXX   Color Scheme”等，当然也可以自己安装别的。</p><h3 id="关于破解"><a href="#关于破解" class="headerlink" title="关于破解"></a><strong>关于破解</strong></h3><p>有关sublime text不同版本的破解方式不尽相同，就算不破解也不会有太大的影响，请尽量支持正版，实在不行请自行百度。</p><h3 id="2-快捷键设置"><a href="#2-快捷键设置" class="headerlink" title="2.快捷键设置"></a>2.快捷键设置</h3><p>总是按”<em>Ctrl+B</em>“编译太麻烦？没关系，Sublime Text支持自定义快捷键。<br>请前往“<em>首选项-快捷键设置</em>”找到<code>{ "keys": ["ctrl+b"], "command": "build" }</code>这一行，把前面的”ctrl+b”尽情地改成自己习惯的按键。（为避免冲突，建议新建一个.sublime-keymap –User，将改后的代码复制进去单独保存）</p><h3 id="3-其他常用操作（目前就这么多）"><a href="#3-其他常用操作（目前就这么多）" class="headerlink" title="3.其他常用操作（目前就这么多）"></a>3.其他常用操作（目前就这么多）</h3><p>寻找：ctrl+F<br>替换：ctrl+H<br>命令窗口：ctrl+shift+P<br>框选所有相同变量名：Alt+F3<br>注释：ctrl+/<br>在多个代码标签中切换：ctrl+tab<br>分屏：Alt+shift+数字（数字为键盘上面那一行，表示为分多少块屏）<br>多行折叠：ctrl+J （毁别人代码的神器）<br>折叠代码：ctrl+shift+[<br>展开代码：ctrl+shift+]</p><h2 id="成果展示："><a href="#成果展示：" class="headerlink" title="成果展示："></a>成果展示：</h2><p>首先更改编译系统（按照自己的名称选择）：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/68de40de0b925c10096ca115a15e9d76.png" alt=""><br>接下来写好代码，使用快捷键编译，结果如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/bdc7956e59951a09066d15c68bbddedd.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 569 Milking Time</title>
      <link href="/2019/12/21/rqnoj-569-milking-time/"/>
      <url>/2019/12/21/rqnoj-569-milking-time/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-569-Milking-Time"><a href="#RQNOJ-569-Milking-Time" class="headerlink" title="RQNOJ 569 Milking Time"></a><strong>RQNOJ 569 Milking Time</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/569" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>在一个数轴上可以摆M个线段，每个线段的起始终止端点给定（为整数），且每个线段有一个分值，问如何从中选取一些线段使得任意两个线段之间的距离大于R。每一条线段属于[0，N]。如何选择这些线段，使得分值之和最大？<br>FROM USACO</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>第一行三个整数，N，M，R。M〈=1000；N〈=1000000<br>以下M行，每行三个整数，表示起点、终点、分值。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>一个整数，最大分值。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>12 4 21 2 810 12 193 6 247 10 31</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>43</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>此题一看，便知是经典的dp题目——选取线段，只不过多了一个<strong>“距离大于R”</strong>。而选取线段的题目，则是由01背包扩展而来的，只不过多了端点，由点变成了线段。下面，先讲一下选取线段的题目如何想：（懂得此部分内容的大佬请略过，直接到图片下方）<br>如果我们将题目中的”R”删去，改为<strong>“任意两条线段都不重合”</strong>，就是传统的选取线段问题。此类题目，只需要开一个结构体存储线段的左端点（l），右端点（r）和分值（w），再对结构体按照左端点从小到大排序，就变成了背包问题。用dp[i]表示选到第i条线段时的最大分数，再枚举左端点在i之前的线段j，此时只需考虑线段j的右端点是否小于等于线段i的左端点，如果是就转移，否则不变。同时，由于不一定要选到最后一条线段，答案不一定是dp[m]（例如dp[m]是负无穷），所以要每步更新ans。<br><strong>转移过程如下：</strong><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwODMwMjEzMzU3NDY2?x-oss-process=image/format,png" alt=""><br>到这里，唯一的问题就是新加入的距离R，为了解决这个问题，<strong>我采取了最最最智障的方法：假设每条线段比原本的线段长R，不就解决了？</strong>因此，在读入时，将线段的右端点+R即可。</p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token keyword">struct</span> nod<span class="token punctuation">{</span><span class="token comment" spellcheck="true">//存储线段</span>    <span class="token keyword">int</span> l<span class="token punctuation">,</span>r<span class="token punctuation">,</span>w<span class="token punctuation">;</span><span class="token punctuation">}</span>a<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>r<span class="token punctuation">,</span>ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">1000005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>nod x<span class="token punctuation">,</span>nod y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> x<span class="token punctuation">.</span>l<span class="token operator">&lt;</span>y<span class="token punctuation">.</span>l<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token operator">>></span>n<span class="token operator">>></span>m<span class="token operator">>></span>r<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">+</span><span class="token operator">=</span>r<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//距离问题</span>    <span class="token punctuation">}</span>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">+</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//首先必须选自己</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//由于排好序，只需枚举前面的线段即可</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">&lt;=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果合法</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//转移</span>        ans<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//更新答案</span>    <span class="token punctuation">}</span>        cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 429 词链</title>
      <link href="/2019/12/21/rqnoj-429-ci-lian/"/>
      <url>/2019/12/21/rqnoj-429-ci-lian/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-429-词链"><a href="#RQNOJ-429-词链" class="headerlink" title="RQNOJ 429 词链"></a><strong>RQNOJ 429 词链</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/429" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>给定一个仅包含小写字母的英文单词表，其中每个单词最多包含50个字母。<br>如果一张由一个词或多个词组成的表中，每个单词（除了最后一个）都是排在它后面的单词的前缀，则称此表为一个词链。例如下面的单词组成了一个词链：<br>i<br>int<br>integer<br>而下面的单词不组成词链：<br>integer<br>intern<br>请在给定的单词表中取出一些词，组成最长的词链。最长的词链就是包含单词数最多的词链。<br>数据保证给定的单词表中，单词互不相同，并且单词按字典顺序排列。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>第一行一个整数n(n&lt;=10000)，表示单词表中单词数<br>下接n行每行一个单词。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>一个整数，表示最长词链长度。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>5iintintegerinterninternet</code></pre><p>###Output</p><pre><code>4</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>一眼看上去，便知这是一道dp题目，并且是一道典型的类似01背包型的题目，只不过添加了字符串，用dp[i]表示当前选到第i个字符串，所构成的最长词链的长度是多少，再枚举j，看哪些词能与当前字符串构成词链，dp方程不难推出：<br><strong>如果字符串i与j能够成词链：</strong><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwODI4MjEzMjE5NTgw?x-oss-process=image/format,png" alt=""></p><h4 id="看上去很简单是不是？相信大家都想到了。但是！这是n-2的复杂度，n-lt-10000"><a href="#看上去很简单是不是？相信大家都想到了。但是！这是n-2的复杂度，n-lt-10000" class="headerlink" title="看上去很简单是不是？相信大家都想到了。但是！这是n^2的复杂度，n<=10000!"></a>看上去很简单是不是？相信大家都想到了。<strong>但是！</strong>这是n^2的复杂度，n&lt;=10000!</h4><p>于是，TLE，80分…<br>因此，我们需要进行一些优化。转过头来看题目描述，发现：</p><pre><code>并且单词按字典顺序排列</code></pre><p>所以，我们大可以不必枚举完，只需<strong>逆序</strong>枚举j，一但找到，果断break掉，便可省去一半的复杂度，并且能够保证是最优解，于是，奇迹般地AC了…</p><h3 id="下面，为大家展示我用上了STL大法，主函数仅约20行的代码："><a href="#下面，为大家展示我用上了STL大法，主函数仅约20行的代码：" class="headerlink" title="下面，为大家展示我用上了STL大法，主函数仅约20行的代码："></a>下面，为大家展示我用上了STL大法，主函数仅约20行的代码：</h3><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token comment" spellcheck="true">//请忽略以上的内容</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>string a<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不情愿地用上了速度极慢的string</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//流加速</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token number">-1</span><span class="token punctuation">;</span>j<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//逆序枚举</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> la<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>lb<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//求长度</span>            string b<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>lb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//STL大法好！</span>            <span class="token comment" spellcheck="true">/*                插播substr()函数详解：                此处意为将a[i]这一字符串从下标0开始截取长度为lb的一个子串                由此可保证b串与a[j]长度相等，便可以比较            */</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>la<span class="token operator">>=</span>lb <span class="token operator">&amp;&amp;</span> b<span class="token operator">==</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果找到，break掉</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        ans<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//求出答案</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//由于dp数组初值为0，没有包含第一个字符串，所以此处必须要+1</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 188 购物问题</title>
      <link href="/2019/12/21/rqnoj-188-gou-wu-wen-ti/"/>
      <url>/2019/12/21/rqnoj-188-gou-wu-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-188-购物问题"><a href="#RQNOJ-188-购物问题" class="headerlink" title="RQNOJ 188 购物问题"></a><strong>RQNOJ 188 购物问题</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/188" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>由于换季，商场推出优惠活动，以超低价格出售若干种商品。但是商场为避免过分亏本，规定某些商品不能同时购买，而且每种超低价商品只能买一件。身为顾客的你想获得最大的实惠，也就是争取节省最多的钱。经过仔细研究，我们发现商场出售的超低价商品中，不存在以下这种情况：n(n&gt;=3)种商品C1，C2，C3，……，Cn，其中Ci和Ci+1是不能同时购买的（i=1,2,……,n-1），而且C1和Cn也不能同时购买。<br>请编程计算可以接生<strong>(??节省??)</strong>的最大金额数。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>第一行两个整数K，M（1&lt;=K&lt;=1000），其中K表示超低价商品数，K种商品的编号依次为1，2，3，……，K；M表示不能同时购买的商品对数。<br>接下来K行，第i行有一个整数Xi表示购买编号为i的商品可以节省的金额（1&lt;=Xi&lt;=100）。<br>再接下来M行，每行两个数A，B，表示A和B不能同时购买，1&lt;=A,B&lt;=K,A≠B。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>仅一行一个整数，表示能节省的最大金额数。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>3 11111 2</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>2</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>此题一看便是dp（废话，人家RQNOJ都告诉你了），经过仔细观察，发现题目中存在这样一句话：</p><pre><code>不存在以下这种情况：n(n&gt;=3)种商品C1，C2，C3，……，Cn，其中Ci和Ci+1是不能同时购买的（i=1,2,……,n-1），而且C1和Cn也不能同时购买。</code></pre><p><strong>再结合那m种不能同时购买的情况，其实，这就是一道树上dp题目。</strong><br>思路有了，问题来了：dp方程怎么搞？<br>通过观察发现，此题边无向，便成为了森林类的树上dp。<br><strong>于是，dp方程便出来了：</strong><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwODI4MjA0NTI3Nzgz?x-oss-process=image/format,png" alt=""><br>这是最终实现时的代码，nex代表与now有边相连的点，<br><strong>其中，按边扩展的dp[i][0]表示不选i及其子树的最大节省金额数</strong><br><strong>dp[i][1]则表示选择i及其子树的最大节省金额数</strong><br>枚举i,求出每一个节点的dp[i][0]与dp[i][1]，求出其中的最大值，从而相加得到最终的答案。</p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//如有不懂请参考注释，谢谢！</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token comment" spellcheck="true">//请忽略上面的一切</span>vector <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> lin<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//代替邻接表，当时发现link在RQNOJ中是关键字，便改成了这样</span><span class="token keyword">int</span> k<span class="token punctuation">,</span>m<span class="token punctuation">,</span>ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据前文介绍，第二维只需0、1两个下标即可</span><span class="token keyword">bool</span> vis<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//判断该点是否被访问过</span><span class="token comment" spellcheck="true">//披着dfs的dp</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> now<span class="token punctuation">,</span><span class="token keyword">int</span> pre<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//pre用来检查是否重复走同一条边（因为无向）</span><span class="token punctuation">{</span>    vis<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    dp<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    dp<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//由于选择其子树，即至少选择该节点</span>    <span class="token keyword">int</span> len<span class="token operator">=</span>lin<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//由该点出发能通向多少个点</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> nex<span class="token operator">=</span>lin<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>nex<span class="token operator">!=</span>pre<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果没有原路返回</span>        <span class="token punctuation">{</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>nex<span class="token punctuation">,</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//搜索</span>            dp<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果不选择其子树，便可选择另一点的子树</span>            dp<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//否则不行</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">memset</span><span class="token punctuation">(</span>vis<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>vis<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强迫症犯了...</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//流加速</span>    cin<span class="token operator">>></span>k<span class="token operator">>></span>m<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>        cin<span class="token operator">>></span>x<span class="token operator">>></span>y<span class="token punctuation">;</span>        lin<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//由于是无向边（互不相容），需要添加两次</span>        lin<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//一次对每个未被访问到的节点进行搜索，求出对应的dp[i][0]和dp[i][1]</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>vis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ans<span class="token operator">+</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 117 最佳课题选择</title>
      <link href="/2019/12/21/rqnoj-117-zui-jia-ke-ti-xuan-ze/"/>
      <url>/2019/12/21/rqnoj-117-zui-jia-ke-ti-xuan-ze/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-117-最佳课题选择"><a href="#RQNOJ-117-最佳课题选择" class="headerlink" title="RQNOJ 117 最佳课题选择"></a><strong>RQNOJ 117 最佳课题选择</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/117" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>NaCN_JDavidQ要在下个月交给老师n篇论文，论文的内容可以从m个课题中选择。由于课题数有限，NaCN_JDavidQ不得不重复选择一些课题。完成不同课题的论文所花的时间不同。具体地说，对于某个课题i，若NaCN_JDavidQ计划一共写x篇论文，则完成该课题的论文总共需要花费Ai*x^Bi个单位时间（系数Ai和指数Bi均为正整数）。给定与每一个课题相对应的Ai和Bi的值，请帮助NaCN_JDavidQ计算出如何选择论文的课题使得他可以花费最少的时间完成这n篇论文。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>第一行有两个用空格隔开的正整数n和m，分别代表需要完成的论文数和可供选择的课题数。<br>以下m行每行有两个用空格隔开的正整数。其中，第i行的两个数分别代表与第i个课题相对应的时间系数Ai和指数Bi。<br>对于30%的数据，n&lt;=10,m&lt;=5；<br>对于100%的数据，n&lt;=200，m&lt;=20，Ai&lt;=100，Bi&lt;=5。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>输出完成n篇论文所需要耗费的最少时间。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>10 32 11 22 1</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>19</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>首先，此题是一道dp题，但在设计方程之前，现想这样一个问题：时间怎么存？为了解决这个问题，我专门开了一个time二维数组来记录时间。其中<strong>time[i][j]表示第i个课题完成j篇论文所用的时间</strong>。只需在读入时循环枚举j，计算出来就好（建议不要用pow函数，我是手打的快速幂）。有了存储时间的方法，dp方程便不难设计：用dp[i]表示写i篇论文所用的最小时间，只需循环m个课题，再枚举当前计算的i与此时写的论文数j。<br><strong>转移过程如下：</strong><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwODMwMjA0NjEwNTY4?x-oss-process=image/format,png" alt=""></p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//请看注释</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> int long long</span><span class="token comment" spellcheck="true">//呵呵</span><span class="token macro property">#<span class="token directive keyword">define</span> INF 0x7f</span><span class="token comment" spellcheck="true">//呵呵</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> tim<span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">kuai_su_mi</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//呵呵快速幂</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span>            ans<span class="token operator">*</span><span class="token operator">=</span>n<span class="token punctuation">;</span>        n<span class="token operator">*</span><span class="token operator">=</span>n<span class="token punctuation">;</span>        m<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property">#<span class="token directive keyword">undef</span> int</span><span class="token comment" spellcheck="true">//呵呵</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//呵呵</span><span class="token macro property">#<span class="token directive keyword">define</span> int long long</span><span class="token comment" spellcheck="true">//呵呵</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//呵呵</span>    cin<span class="token operator">>></span>n<span class="token operator">>></span>m<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>        cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//论文篇数不超过n</span>            tim<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token operator">*</span><span class="token function">kuai_su_mi</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//预处理做第i个课题中的j篇论文的时间</span>    <span class="token punctuation">}</span>    <span class="token function">memset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span>INF<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//呵呵</span>    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//做0篇论文不需要时间</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//当前选到第k个课题</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>n<span class="token punctuation">;</span>i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//该算dp[i]了，注意正着枚举会WA</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//第k个课题做了j篇论文</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span>j<span class="token punctuation">]</span><span class="token operator">+</span>tim<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">//做上一个课题时的论文数（i-j）+当前耗费的时间（time[k][j]）</span>    cout<span class="token operator">&lt;&lt;</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 99 配置魔药</title>
      <link href="/2019/12/21/rqnoj-99-pei-zhi-mo-yao/"/>
      <url>/2019/12/21/rqnoj-99-pei-zhi-mo-yao/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-99-配置魔药"><a href="#RQNOJ-99-配置魔药" class="headerlink" title="RQNOJ 99 配置魔药"></a><strong>RQNOJ 99 配置魔药</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/99" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>在《Harry Potter and the Chamber of Secrets》中，Ron的魔杖因为坐他老爸的Flying Car撞到了打人柳，不幸被打断了，从此之后，他的魔杖的魔力就大大减少，甚至没办法执行他施的魔咒，这为Ron带来了不少的烦恼。这天上魔药课，Snape要他们每人配置一种魔药（不一定是一样的），Ron因为魔杖的问题，不能完成这个任务，他请Harry在魔药课上(自然是躲过了Snape的检查)帮他配置。现在Harry面前有两个坩埚，有许多种药材要放进坩埚里，但坩埚的能力有限，无法同时配置所有的药材。一个坩埚相同时间内只能加工一种药材，但是不一定每一种药材都要加进坩埚里。加工每种药材都有必须在一个起始时间和结束时间内完成（起始时间所在的那一刻和结束时间所在的那一刻也算在完成时间内），每种药材都有一个加工后的药效。现在要求的就是Harry可以得到最大的药效。<br>出自:宜昌一中</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>输入文件的第一行有2个整数，一节魔药课的t（1≤t&lt;≤500）和药材数n（1≤n≤100）。<br>输入文件第2行到n+1行中每行有3个数字，分别为加工第i种药材的起始时间t1、结束时间t2、（1≤t1≤t2≤t）和药效w（1≤w≤100）。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>输出文件medic.out只有一行，只输出一个正整数，即为最大药效。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>7 41 2 104 7 201 3 23 7 3</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>35</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>此题可化简为选取线段的题目：即选取多条线段，任意两条线段不能有重合，求最大的分值。但此题由于有两个锅，所以较为麻烦。我的解决方法是：开一个三维dp数组，dp[k][i][j]，描述选到第k个魔药，第一个锅在配第i种魔药，第二个锅在配第j种魔药时的最大分值（药效）。当转移第一个锅时，前两维相同，第二个锅时，第一维和第三维相同，这样就不会有重复，每次更新答案即可。转移过程如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwOTAyMTYzNjU4NTA2?x-oss-process=image/format,png" alt=""><br>此题与另一道题（RQNOJ 569 Milking Time）相比，更多了一层难度，对于选取线段的题目基础知识的讲解，欢迎来看我的另一篇博客：<a href="https://wjsoj.github.io/2019/12/21/rqnoj-569-milking-time/">RQNOJ 569 Milking Time</a></p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token keyword">struct</span> nod<span class="token punctuation">{</span>    <span class="token keyword">int</span> l<span class="token punctuation">,</span>r<span class="token punctuation">,</span>w<span class="token punctuation">;</span><span class="token punctuation">}</span>a<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> t<span class="token punctuation">,</span>n<span class="token punctuation">,</span>ans<span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>nod x<span class="token punctuation">,</span>nod y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> x<span class="token punctuation">.</span>l<span class="token operator">&lt;</span>y<span class="token punctuation">.</span>l<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token operator">>></span>t<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">+</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>k<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">&lt;</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token punctuation">)</span>                    dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>k<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token operator">&lt;</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token punctuation">)</span>                    dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>k<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>                ans<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 95 多多看DVD(加强版)</title>
      <link href="/2019/12/21/rqnoj-95-duo-duo-kan-dvd-jia-qiang-ban/"/>
      <url>/2019/12/21/rqnoj-95-duo-duo-kan-dvd-jia-qiang-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-95-多多看DVD-加强版"><a href="#RQNOJ-95-多多看DVD-加强版" class="headerlink" title="RQNOJ 95 多多看DVD(加强版)"></a><strong>RQNOJ 95 多多看DVD(加强版)</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/95" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>多多进幼儿园了，今天报名了。只有今晚可以好好放松一下了（以后上了学后会很忙）。她的叔叔决定给他买一些动画片DVD晚上看。可是爷爷规定他们只能在一定的时间段L看完。（因为叔叔还要搞NOIP不能太早陪多多看碟，而多多每天很早就困了所以只能在一定的时间段里看碟）。多多列出一张表要叔叔给她买N张DVD碟，大多都是多多爱看的动画片（福音战士，机器猫，火影忍者，樱桃小丸子……）。这N张碟编号为（1，2，3……N）。多多给每张碟都打了分Mi（Mi&gt;0），打分越高的碟说明多多越爱看。每张碟有播放的时间Ti。多多想在今晚爷爷规定的时间里看的碟总分最高。（必须把要看的碟看完，也就是说一张碟不能只看一半）。显然叔叔在买碟是没必要把N张全买了，只要买要看的就OK了，这样节省资金啊。而且多多让叔叔惯的特别任性只要他看到有几张就一定会看完。<br>可是出现了一个奇怪的问题，买碟的地方只买给顾客M（M&lt;N）张碟，不会多也不会少。这可让多多叔叔为难了。怎么可以在N张碟中只买M张而且在规定时间看完，而且使总价值最高呢？<br>聪明的你帮帮多多的叔叔吧。<br>数据范围 by RQ<br>对于100%的数据m&lt;n&lt;=100 l&lt;=1000</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>输入文件有三行<br>第一行：两个数空格隔开的正整数，N，M，L（分别表示叔叔给多多买的碟的数量，商店要买给叔叔的碟的数量，爷爷规定的看碟的时间段）。<br>第二行到第N行，每行两个数：T，M，给出多多列表中DVD碟的信息。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>单独输出一行，表示多多今晚看的碟的总分。<br>如果商店卖给叔叔的M张碟无法在爷爷规定的时间看完输出0；</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>3 2 1011 1001 29 1</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>3</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>此题可以用dp[i][j]表示看了i张碟（这里的碟在1<del>m范围内），花费时间为j时得到的最大分数。为了解决输出0的情况，初始化为负无穷，只让dp[0][i]=0（看0张碟时一定不会得到分数）最后输出dp[m][l]即可。在转移时，先枚举每张碟k（1</del>n），再从大到小枚举m张碟i，最后从大到小枚举时间j（l(限定时间)~第k张碟的时间），转移过程如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwOTAyMTYxMzM0OTQ2?x-oss-process=image/format,png" alt=""><br>其中t数组为每张碟的时间，a数组为每张碟的打分。<br>另外，最后需要特判：如果dp[m][l]&lt;0，（仍是负无穷，未被更新的话）将其变为0再输出。</p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>l<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>t<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token operator">>></span>n<span class="token operator">>></span>m<span class="token operator">>></span>l<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cin<span class="token operator">>></span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">105</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">1005</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">999999</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">1005</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//l&lt;=1000</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>m<span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>l<span class="token punctuation">;</span>j<span class="token operator">>=</span>t<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>t<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>        dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RQNOJ 57 找啊找啊找GF</title>
      <link href="/2019/12/21/rqnoj-57-zhao-a-zhao-a-zhao-gf/"/>
      <url>/2019/12/21/rqnoj-57-zhao-a-zhao-a-zhao-gf/</url>
      
        <content type="html"><![CDATA[<h1 id="RQNOJ-57-找啊找啊找GF"><a href="#RQNOJ-57-找啊找啊找GF" class="headerlink" title="RQNOJ 57 找啊找啊找GF"></a><strong>RQNOJ 57 找啊找啊找GF</strong></h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><h4 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.rqnoj.cn/problem/57" target="_blank" rel="noopener"><strong>传送门</strong></a></h4><p>“找啊找啊找GF,找到一个好GF,吃顿饭啊拉拉手,你是我的好GF.再见.”<br>“诶,别再见啊…”<br>七夕…七夕…七夕这个日子,对于sqybi这种单身的菜鸟来说是多么的痛苦…虽然他听着这首叫做”找啊找啊找GF”的歌,他还是很痛苦.为了避免这种痛苦,sqybi决定要给自己找点事情干.他去找到了七夕模拟赛的负责人zmc MM,让她给自己一个出题的任务.经过几天的死缠烂打,zmc MM终于同意了.<br>但是,拿到这个任务的sqybi发现,原来出题比单身更让人感到无聊-_-….所以,他决定了,要在出题的同时去办另一件能够使自己不无聊的事情–给自己找GF.</p><p>sqybi现在看中了n个MM,我们不妨把她们编号1到n.请MM吃饭是要花钱的,我们假设请i号MM吃饭要花rmb[i]块大洋.而希望骗MM当自己GF是要费人品的,我们假设请第i号MM吃饭试图让她当自己GF的行为(不妨称作泡该MM)要耗费rp[i]的人品.而对于每一个MM来说,sqybi都有一个对应的搞定她的时间,对于第i个MM来说叫做time[i]. sqybi保证自己有足够的魅力用time[i]的时间搞定第i个MM^_^.<br>sqybi希望搞到尽量多的MM当自己的GF,这点是毋庸置疑的.但他不希望·为此花费太多的时间(毕竟七夕赛的题目还没出),所以他希望在保证搞到MM数量最多的情况下花费的总时间最少.</p><p>sqybi现在有m块大洋,他也通过一段时间的努力攒到了r的人品(这次为模拟赛出题也攒rp哦~~).他凭借这些大洋和人品可以泡到一些MM.他想知道,自己泡到最多的MM花费的最少时间是多少.<br>注意sqybi在一个时刻只能去泡一个MM–如果同时泡两个或以上的MM的话,她们会打起来的…</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h3><p>输入的第一行是n,表示sqybi看中的MM数量.<br>接下来有n行,依次表示编号为1, 2, 3, …, n的一个MM的信息.每行表示一个MM的信息,有三个整数:rmb, rp和time.<br>最后一行有两个整数,分别为m和r.</p><p>对于20%数据,1&lt;=n&lt;=10;<br>对于100%数据,1&lt;=rmb&lt;=100,1&lt;=rp&lt;=100,1&lt;=time&lt;=1000;<br>对于100%数据,1&lt;=m&lt;=100,1&lt;=r&lt;=100,1&lt;=n&lt;=100</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h3><p>你只需要输出一行,其中有一个整数,表示sqybi在保证MM数量的情况下花费的最少总时间是多少.</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><pre><code>41 2 52 1 62 2 22 2 35 5</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><pre><code>13</code></pre><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a><strong>主要思路</strong></h3><p>用mm[i][j]表示消耗i个人民币，j点人品泡到的最大mm数<br>dp[i][j]表示消耗i个人民币，j点人品泡最多mm下花费的最小时间。<br>先枚举当前该泡第k个MM，再枚举人民币i和人品j，无非分三种情况转移：<br><strong>1.当前花费泡到的mm数&lt;=更少花费（不泡当前mm）时泡到的mm数，此时选了当前mm，得到的mm数量会更多，因此让当前花费的mm数=不泡当前mm时的mm数+1（选择当前mm），当前花费消耗的时间=更少花费消耗的时间+泡当前mm需要的时间；</strong><br><strong>2.当前花费泡到的mm数正好=更少花费（不泡当前mm）时泡到的mm数+1（选择当前mm），此时无需更新mm的值，只需更新时间就好，让dp[i][j]=min(dp[i][j],dp[i-花费钱数][j-花费人品])即可；</strong><br><strong>3.当前花费泡到的mm数&gt;更少花费（不泡当前mm）时泡到的mm数+1（选择当前mm），此时指在同等花费下能泡到更多mm，因此更新答案反而不是最优解，所以不予更新（不理会即可）。</strong></p><h4 id="转移过程如下："><a href="#转移过程如下：" class="headerlink" title="转移过程如下："></a><strong>转移过程如下：</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwOTAyMTMwNjI4Mjg0?x-oss-process=image/format,png" alt=""><br><strong>另外，在求答案的时候，应用maxn表示泡到的最大mm数，用minn表示最小花费。如果当前花费泡到的mm&gt;maxn或者当前花费泡到的mm=maxn但当前时间小于minn时，即可更新答案。（具体请见代码）</strong></p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ctime></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;map></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ll long long</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>r<span class="token punctuation">;</span><span class="token keyword">int</span> rmb<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>rp<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tim<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mm<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> maxn<span class="token operator">=</span><span class="token operator">-</span><span class="token number">999</span><span class="token punctuation">,</span>minn<span class="token operator">=</span><span class="token number">999</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//重载min函数，防止输出0</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> y<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>y<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">&lt;</span>y<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token keyword">return</span> y<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token operator">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cin<span class="token operator">>></span>rmb<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span>rp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span>tim<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    cin<span class="token operator">>></span>m<span class="token operator">>></span>r<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//rmb &amp; rp</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>m<span class="token punctuation">;</span>i<span class="token operator">>=</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>r<span class="token punctuation">;</span>j<span class="token operator">>=</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;=</span>mm<span class="token punctuation">[</span>i<span class="token operator">-</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>mm<span class="token punctuation">[</span>i<span class="token operator">-</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span>tim<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>mm<span class="token punctuation">[</span>i<span class="token operator">-</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span>rmb<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span>rp<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span>tim<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>r<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>maxn <span class="token operator">||</span> <span class="token punctuation">(</span>mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>maxn <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>minn<span class="token punctuation">)</span><span class="token punctuation">)</span>                maxn<span class="token operator">=</span>mm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>minn<span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>minn<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法知识</title>
      <link href="/2019/12/21/markdown/"/>
      <url>/2019/12/21/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="一-Markdown是什么？"><a href="#一-Markdown是什么？" class="headerlink" title="一.Markdown是什么？"></a>一.Markdown是什么？</h1><p> 百度百科：Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br> 1.Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。<br> 2.用于编写说明文档，并且以“README.md”的文件名保存在软件的目录下面。<br> 3.除此之外，由于我们有了RStudio这样的神级编辑器，我们还可以快速将Markdown转化为演讲PPT、Word产品文档、LaTex论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown已经广泛使用，极大地推进了动态可重复性研究的历史进程。<br> <strong>这里，我利用Markdown编辑器在博客园上写博客，因此留下这篇博客用以基本语法知识的备份与梳理，以防忘记。</strong></p><h1 id="二-常用语法"><a href="#二-常用语法" class="headerlink" title="二.常用语法"></a>二.常用语法</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p> 在Markdown中，用#号+文本来表示标题，共六级，在博客园中，第六级不必加#号，直接写入文本即可。</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 这是一级标题</span><span class="token title important"><span class="token punctuation">##</span> 这是二级标题</span><span class="token title important"><span class="token punctuation">###</span> 这是三级标题</span><span class="token title important"><span class="token punctuation">####</span> 这是四级标题</span><span class="token title important"><span class="token punctuation">#####</span> 这是五级标题</span>这是一个段落<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h3><blockquote><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><p>这是一个段落</p></blockquote><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><h4 id="粗体：-要加粗的文本"><a href="#粗体：-要加粗的文本" class="headerlink" title="粗体：**要加粗的文本**"></a><strong>粗体：</strong><code>**要加粗的文本**</code></h4><h4 id="斜体：-要倾斜的文本"><a href="#斜体：-要倾斜的文本" class="headerlink" title="斜体：*要倾斜的文本*"></a><em>斜体：</em><code>*要倾斜的文本*</code></h4><h4 id="删除线：-要加删除线的文本"><a href="#删除线：-要加删除线的文本" class="headerlink" title="删除线：~~要加删除线的文本~~"></a><del>删除线</del>：<code>~~要加删除线的文本~~</code></h4><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><h3 id="在要引用的文字前加-gt-即可"><a href="#在要引用的文字前加-gt-即可" class="headerlink" title="在要引用的文字前加 > 即可"></a>在要引用的文字前加 <code>&gt;</code> 即可</h3><blockquote><h3 id="这是一则示例文本"><a href="#这是一则示例文本" class="headerlink" title="这是一则示例文本"></a>这是一则示例文本</h3><blockquote><h4 id="这是一则嵌套引用"><a href="#这是一则嵌套引用" class="headerlink" title="这是一则嵌套引用"></a>这是一则嵌套引用</h4></blockquote></blockquote><h2 id="4-华丽丽的分割线"><a href="#4-华丽丽的分割线" class="headerlink" title="4.华丽丽的分割线"></a>4.华丽丽的分割线</h2><h3 id="三个或三个以上的-或"><a href="#三个或三个以上的-或" class="headerlink" title="三个或三个以上的*或-"></a>三个或三个以上的<code>*或-</code></h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token hr punctuation">******</span><span class="token hr punctuation">------</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h3><hr><hr><h2 id="5-链接与图片"><a href="#5-链接与图片" class="headerlink" title="5.链接与图片"></a>5.链接与图片</h2><h3 id="格式为："><a href="#格式为：" class="headerlink" title="格式为："></a>格式为：</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token url">[要显示的名称](链接地址 <span class="token string">"链接title"</span>)</span><span class="token url">![图片文字](图片地址 <span class="token string">"图片title"</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：一般不加title</p><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token url">[博客园](https://www.cnblogs.com)</span><span class="token url">![壁纸](http://yanxuan.nosdn.127.net/29ed90248fa17692b94aaf38cccd7a34.jpg)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="博客园"><a href="#博客园" class="headerlink" title="博客园"></a><a href="https://www.cnblogs.com" title="title" target="_blank" rel="noopener">博客园</a></h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/29ed90248fa17692b94aaf38cccd7a34.jpg" alt="壁纸"></p><p> 在上传图片时，我选用由<a href="https://u.tools" target="_blank" rel="noopener">utools</a>提供的“图床”插件，支持多个源的图床服务器上传，拖动至窗口即可上传，可以直接复制成markdown格式，十分方便便捷，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/2990a0dad36737fed1e4494da99ee265.png" alt=""></p><h2 id="6-代码"><a href="#6-代码" class="headerlink" title="6.代码"></a>6.代码</h2><blockquote><p>单行代码：`cout&lt;&lt;”helloworld”&lt;&lt;endl;`</p></blockquote><p><code>cout&lt;&lt;"helloworld"&lt;&lt;endl;</code></p><blockquote><p>代码块：<br>```<br>int main(int argc, char const *argv[])<br>{<br>    cout&lt;&lt;”Hello World”&lt;&lt;endl;<br>    return 0;<br>}<br>```</p></blockquote><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Hello World"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-数学公式"><a href="#7-数学公式" class="headerlink" title="7.数学公式"></a>7.数学公式</h2><p>作为一个不会LaTeX的菜鸡，只好使用Markdown自带的公式编辑器，这里注意博客园默认是不支持数学公式的，请提前在管理后台勾选“启用数学公式支持”。</p><h4 id="其使用方法如下："><a href="#其使用方法如下：" class="headerlink" title="其使用方法如下："></a>其使用方法如下：</h4><blockquote><p>行内公式：$ a^2+b^2=c^2 $</p></blockquote><h4 id="这是行内公式-a-2-b-2-c-2-的一个实例。"><a href="#这是行内公式-a-2-b-2-c-2-的一个实例。" class="headerlink" title="这是行内公式  $ a^2+b^2=c^2 $  的一个实例。"></a>这是行内公式  $ a^2+b^2=c^2 $  的一个实例。</h4><blockquote><p>公式块：</p><p>$$</p><p>a^2+b^2=c^2</p><p>$$</p></blockquote><p>$$<br>a^2+b^2=c^2<br>$$</p><h3 id="常用数学符号的表示方法：-参考链接"><a href="#常用数学符号的表示方法：-参考链接" class="headerlink" title="常用数学符号的表示方法： 参考链接"></a>常用数学符号的表示方法： <a href="https://www.jianshu.com/p/e74eb43960a1" target="_blank" rel="noopener">参考链接</a></h3><pre><code>下标符号：x_1乘法：\times点乘：\cdot星号乘：\ast除法：\div分式：\frac {分子} {分母}绝对值：||开根：\sqrt 数字大括号：\{   \}求和：\sum大于等于：\geq小于等于：\leq不等于：\neq约等于：\approx属于：\in交集：\cap并集：\cup真子集：\subsetep空集：\emptyset无穷：\infty</code></pre><h2 id="8-转义字符”-“"><a href="#8-转义字符”-“" class="headerlink" title="8.转义字符”\“"></a>8.转义字符”\“</h2><h4 id="用以输出矛盾文本时进行转义。"><a href="#用以输出矛盾文本时进行转义。" class="headerlink" title="用以输出矛盾文本时进行转义。"></a>用以输出矛盾文本时进行转义。</h4><h2 id="9-表格、列表、流程图"><a href="#9-表格、列表、流程图" class="headerlink" title="9.表格、列表、流程图"></a>9.表格、列表、流程图</h2><h4 id="不会，所以不在这里列出。"><a href="#不会，所以不在这里列出。" class="headerlink" title="不会，所以不在这里列出。"></a>不会，所以不在这里列出。</h4><h1 id="三-推荐一款编辑器Typora"><a href="#三-推荐一款编辑器Typora" class="headerlink" title="三.推荐一款编辑器Typora"></a>三.推荐一款编辑器Typora</h1><h2 id="官网直达"><a href="#官网直达" class="headerlink" title="官网直达"></a><a href="https://www.typora.io" target="_blank" rel="noopener">官网直达</a></h2><h3 id="界面展示："><a href="#界面展示：" class="headerlink" title="界面展示："></a>界面展示：</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/54f936cfb92d3b5c4be8ad6dce2e1f6a.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://yanxuan.nosdn.127.net/a5e65a3c5178fa6dc16e0b408f2f9e9e.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉筛理解与实现</title>
      <link href="/2019/12/21/ou-la-shai/"/>
      <url>/2019/12/21/ou-la-shai/</url>
      
        <content type="html"><![CDATA[<p>在传统的素数筛法中，我们使用了对于每一个数n，在 1~(√n) 范围内进行取模检查，这样逐一判断的复杂度为n(√n)。</p><p>但如果我们需要更快的筛法时怎么办？</p><p>于是著名的<strong>欧拉筛</strong>诞生了。它能将复杂度降为<strong>O(n)</strong>级别。</p><h2 id="1-关键理解："><a href="#1-关键理解：" class="headerlink" title="1.关键理解："></a>1.关键理解：</h2><p>欧拉筛的原理是保证在 2<del>n 范围中的每一个合数都能被<strong>唯一分解成它的最小质因数与除自己外最大的因数相乘的形式</strong>。因此我们枚举2</del>n中的每一个数作为筛法中的“除自己外的最大因数”，如果它未被标记为合数，就先将它放入素数表内，再将这个最大因数与素数表中已经找到的素数作为最小质因数相乘，将得到的这些数标记为合数。最后输出得到的素数表即可。</p><p>但是我们如何保证<strong>每个合数都被唯一分解</strong>？</p><h3 id="解决方法如下："><a href="#解决方法如下：" class="headerlink" title="解决方法如下："></a><strong>解决方法如下：</strong></h3><p>当此时取出的素数表中的素数（即枚举的最小质因子）整除于当前枚举的合数时，我们就停止循环素数表，开始枚举下一个合数。</p><h3 id="证明如下："><a href="#证明如下：" class="headerlink" title="证明如下："></a><strong>证明如下：</strong></h3><p>设当前枚举的最小质因子prime[i]整除于合数n时，即我们要筛掉合数 <strong>n*prime[i]</strong> ；如果我们此时不退出，继续枚举下一个素数prime[i+1]，对于将要筛掉的合数 <strong>n*prime[i+1]</strong> 由于插入顺序从小到大，则 <strong>prime[i+1]&gt;prime[i]</strong>。由于prime[i]整除于合数n，所以必然合数 <strong>n*prime[i+1]</strong> 还可以被分解为</p><p>$$(\frac{n}{prime[i]}<em>prime[i+1])</em>prime[i]$$</p><p>显然，在上面的分解方式中，我们将要筛掉的合数分解为更小的质因子 <strong>prime[i]</strong> ，这不符合我们对于每一个数被唯一分解的要求，所以我们可在代码中加入一行判断整除关系的代码进行优化。</p><h2 id="2-代码实现："><a href="#2-代码实现：" class="headerlink" title="2.代码实现："></a>2.代码实现：</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stack></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;set></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token operator">||</span>ch<span class="token operator">></span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ch<span class="token operator">==</span><span class="token string">'-'</span><span class="token punctuation">)</span>            f<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>ch<span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>ch<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    x<span class="token operator">*</span><span class="token operator">=</span>f<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">bool</span> IsPrime<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> prime<span class="token punctuation">[</span><span class="token number">50005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span>top<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>IsPrime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>IsPrime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">read</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>IsPrime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            prime<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">,</span>top<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>n<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            IsPrime<span class="token punctuation">[</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>top<span class="token number">-1</span><span class="token operator">&lt;&lt;</span>endl<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        cout<span class="token operator">&lt;&lt;</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客园皮肤配置</title>
      <link href="/2019/12/21/bo-ke-yuan-pi-fu-pei-zhi/"/>
      <url>/2019/12/21/bo-ke-yuan-pi-fu-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前期准备："><a href="#1-前期准备：" class="headerlink" title="1.前期准备："></a>1.前期准备：</h2><h3 id="1-1-选择主题：SimpleMemory"><a href="#1-1-选择主题：SimpleMemory" class="headerlink" title="1.1 选择主题：SimpleMemory"></a>1.1 选择主题：SimpleMemory</h3><h3 id="1-2-开通js权限"><a href="#1-2-开通js权限" class="headerlink" title="1.2 开通js权限"></a>1.2 开通js权限</h3><p>在博客设置界面委婉地向管理员请求就好了，一般都会给予通过的。</p><h3 id="1-3-基本设置"><a href="#1-3-基本设置" class="headerlink" title="1.3 基本设置"></a>1.3 基本设置</h3><p>在博客“选项”一栏中将默认编辑器改为 Markdown，并在下方“控件显示设置”中选择自己需要的控件，建议开启日历和随笔分类，关闭各个排行榜。</p><p>最后一定要记得在上方选项中勾选<strong>“启用数学公式支持”</strong>。</p><h2 id="2-建设工作"><a href="#2-建设工作" class="headerlink" title="2.建设工作"></a>2.建设工作</h2><h3 id="2-1-博客基本模板（请将以下内容加入页面定制css中）"><a href="#2-1-博客基本模板（请将以下内容加入页面定制css中）" class="headerlink" title="2.1 博客基本模板（请将以下内容加入页面定制css中）"></a>2.1 博客基本模板（请将以下内容加入页面定制css中）</h3><p>请在下方”background”一项中设置自己的背景，#home <strong>opacity</strong>一项则可以更改透明度。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*simplememory*/</span>    <span class="token selector"><span class="token id">#google_ad_c1</span>, <span class="token id">#google_ad_c2</span> </span><span class="token punctuation">{</span>      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.syntaxhighlighter</span> a, <span class="token class">.syntaxhighlighter</span> div, <span class="token class">.syntaxhighlighter</span> code, <span class="token class">.syntaxhighlighter</span> table, <span class="token class">.syntaxhighlighter</span> table td,    <span class="token class">.syntaxhighlighter</span> table tr, <span class="token class">.syntaxhighlighter</span> table tbody, <span class="token class">.syntaxhighlighter</span> table thead, <span class="token class">.syntaxhighlighter</span> table caption,    <span class="token class">.syntaxhighlighter</span> textarea </span><span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#home</span> </span><span class="token punctuation">{</span>      <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.85</span><span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">83%</span><span class="token punctuation">;</span>      <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">900</span>px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2</span>px <span class="token number">6</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">100</span>, <span class="token number">100</span>, <span class="token number">100</span>, <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#blogTitle</span> h1 </span><span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>      <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Comic Sans MS"</span><span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span>em<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#515151</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#navList</span> a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#4C9ED9</span><span class="token punctuation">;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#navList</span> a </span><span class="token punctuation">{</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">5</span>em<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">22</span>px<span class="token punctuation">;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#navigator</span> </span><span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ededed</span><span class="token punctuation">;</span>      <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ededed</span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>      <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.catListTitle</span> </span><span class="token punctuation">{</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">21</span>px<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10.5</span>px<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">82</span>, <span class="token number">168</span>, <span class="token number">236</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span> <span class="token number">14</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f5f5f5</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ad_under_post_holder</span> <span class="token id">#google_ad_c1</span>, <span class="token id">#google_ad_c2</span> </span><span class="token punctuation">{</span>      <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*title*/</span>    <span class="token selector"><span class="token id">#cnblogs_post_body</span> h1 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#cnblogs_post_body</span> h2 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#cnblogs_post_body</span> h3 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#cnblogs_post_body</span> h4 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#cnblogs_post_body</span> h5 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*background*/</span><span class="token comment" spellcheck="true">/*将url中的内容改为自己的背景图片地址*/</span>    <span class="token selector">body </span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url(https://images.cnblogs.com/cnblogs_com/wjsoj/1546134/o_191208132200未标题.png)</span> fixed<span class="token punctuation">;</span>      <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Helvetica Neue"</span>, Helvetica, Verdana, Arial, sans-serif<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>      <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">101%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#topics</span> <span class="token class">.postTitle</span> </span><span class="token punctuation">{</span>      <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">200%</span><span class="token punctuation">;</span>      <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">div<span class="token class">.commentform</span> p </span><span class="token punctuation">{</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.comment_btn</span> </span><span class="token punctuation">{</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90</span>px<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span> none<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#ddd</span><span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#999</span><span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, Helvetica Neue, Helvetica, Microsoft Yahei, 宋体, Arial, sans-serif<span class="token punctuation">;</span>      <span class="token property">text-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token hexcode">#fff</span><span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.comment_btn</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90</span>px<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span> none<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#258fb8</span><span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, Helvetica Neue, Helvetica, Microsoft Yahei, 宋体, Arial, sans-serif<span class="token punctuation">;</span>      <span class="token property">text-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token hexcode">#fff</span><span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#commentform_title</span> </span><span class="token punctuation">{</span>      <span class="token property">background-image</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#commentbox_opt</span>, <span class="token id">#commentbox_opt</span> + p </span><span class="token punctuation">{</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.commentbox_title</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#tbCommentBody</span> </span><span class="token punctuation">{</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Microsoft Yahei'</span>, Microsoft Yahei, 宋体, sans-serif<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid <span class="token hexcode">#fff</span><span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset <span class="token number">0</span> <span class="token number">0</span> <span class="token number">8</span>px <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>    / / <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span> px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>      <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.feedbackItem</span> </span><span class="token punctuation">{</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#F2F2F2</span><span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.feedbackListSubtitle</span> </span><span class="token punctuation">{</span>      <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#blog-comments-placeholder</span>, <span class="token id">#comment_form</span> </span><span class="token punctuation">{</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>      <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">1</span>px <span class="token number">2</span>px <span class="token number">3</span>px <span class="token hexcode">#ddd</span><span class="token punctuation">;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">1</span>px <span class="token number">2</span>px <span class="token number">3</span>px <span class="token hexcode">#ddd</span><span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.feedback_area_title</span> </span><span class="token punctuation">{</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.8</span>em<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.feedbackItem</span> </span><span class="token punctuation">{</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#CCC</span><span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">248</span>, <span class="token number">248</span>, <span class="token number">248</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.color_shine</span> </span><span class="token punctuation">{</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">226</span>, <span class="token number">242</span>, <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.feedbackItem</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>      <span class="token property">-webkit-animation-name</span><span class="token punctuation">:</span> color_shine<span class="token punctuation">;</span>      <span class="token property">-webkit-animation-duration</span><span class="token punctuation">:</span> <span class="token number">2</span>s<span class="token punctuation">;</span>      <span class="token property">-webkit-animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#comment_form</span> <span class="token class">.title</span> </span><span class="token punctuation">{</span>      <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector"><span class="token id">#navigator</span> </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ededed</span><span class="token punctuation">;</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ededed</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector"><span class="token id">#topics</span> <span class="token class">.postTitle</span> </span><span class="token punctuation">{</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-代码高亮"><a href="#2-2-代码高亮" class="headerlink" title="2.2 代码高亮"></a>2.2 代码高亮</h3><p>博客园默认的代码高亮很不好看，因此我们搞了它（请将以下css加入最上方以实现覆盖设置），可替换自己想要的高亮设置</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*代码高亮*/</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs</span>, <span class="token class">.cnblogs-post-body</span> <span class="token class">.hljs</span> </span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Courier New"</span>,sans-serif!important<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">15</span>px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.2</span>!important<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">15</span>px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*代码样式*/</span><span class="token comment" spellcheck="true">/* Tomorrow Night Eighties Theme */</span><span class="token comment" spellcheck="true">/* Original theme - https://github.com/chriskempson/tomorrow-theme */</span><span class="token comment" spellcheck="true">/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */</span><span class="token comment" spellcheck="true">/* Tomorrow Comment */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-comment</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-quote</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#255255</span><span class="token number">255</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Red */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-variable</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-template-variable</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-tag</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-name</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-selector-id</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-selector-class</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-regexp</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-deletion</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#f2777a</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Orange */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-number</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-built_in</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-builtin-name</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-literal</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-type</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-params</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-meta</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-link</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#f99157</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Yellow */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-attribute</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ffcc66</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Green */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-string</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-symbol</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-bullet</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-addition</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#99cc99</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Blue */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-title</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-section</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#6699cc</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* Tomorrow Purple */</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-keyword</span>,<span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-selector-tag</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#cc99cc</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span> <span class="token important">!important</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#cccccc</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0.5</span>em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-emphasis</span> </span><span class="token punctuation">{</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.cnblogs-markdown</span> <span class="token class">.hljs-strong</span> </span><span class="token punctuation">{</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-公告栏日历"><a href="#2-3-公告栏日历" class="headerlink" title="2.3 公告栏日历"></a>2.3 公告栏日历</h3><p>同理，加入页面定制css中。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*日历*/</span><span class="token selector"><span class="token id">#blog-calendar</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">330</span>px<span class="token punctuation">;</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ededed</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-图片显示修正"><a href="#2-4-图片显示修正" class="headerlink" title="2.4 图片显示修正"></a>2.4 图片显示修正</h3><p>可更改数值以调整图片显示</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token id">#cnblogs_post_body</span> img </span><span class="token punctuation">{</span>    <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-5-公告栏字号调整"><a href="#2-5-公告栏字号调整" class="headerlink" title="2.5 公告栏字号调整"></a>2.5 公告栏字号调整</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*公告栏*/</span><span class="token selector"><span class="token id">#sideBar</span> </span><span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#sideBar</span> </span><span class="token punctuation">{</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">340</span>px<span class="token punctuation">;</span>    <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token property">-o-text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-页面去广告（实测好像没有什么效果）"><a href="#2-6-页面去广告（实测好像没有什么效果）" class="headerlink" title="2.6 页面去广告（实测好像没有什么效果）"></a>2.6 页面去广告（实测好像没有什么效果）</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*去广告*/</span><span class="token selector"><span class="token id">#ad_t2</span>,<span class="token id">#cnblogs_c1</span>,<span class="token id">#under_post_news</span>,<span class="token id">#cnblogs_c2</span>,<span class="token id">#under_post_kb</span> </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span> <span class="token important">!important</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-公告栏音乐插件"><a href="#2-7-公告栏音乐插件" class="headerlink" title="2.7 公告栏音乐插件"></a>2.7 公告栏音乐插件</h3><h4 id="2-7-1-页面定制css"><a href="#2-7-1-页面定制css" class="headerlink" title="2.7.1 页面定制css"></a>2.7.1 页面定制css</h4><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 定制公告栏音乐插件的样式 */</span><span class="token selector"><span class="token class">.aplayer</span> </span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial,Helvetica,sans-serif<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*音乐插件字体*/</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*音乐插件与公告栏左边的边距，0px就是直接抵到公告栏左边的边上*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">.14</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">3</span>px <span class="token number">1</span>px -<span class="token number">2</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">.2</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">5</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">.12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-2-博客侧边栏公告"><a href="#2-7-2-博客侧边栏公告" class="headerlink" title="2.7.2 博客侧边栏公告"></a>2.7.2 博客侧边栏公告</h4><p>title为歌名</p><p>url建议采用网易云直链，更改id后的数字即可</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 为博客底部添加音乐组件 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"player"</span>  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"aplayer"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://files.cnblogs.com/files/shwee/APlayer.min_v1.10.1.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://files.cnblogs.com/files/shwee/APlayer.min_v1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token keyword">var</span> ap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">APlayer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    element<span class="token punctuation">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'player'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    narrow<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    autoplay<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是否自动播放 <span class="token operator">--</span><span class="token operator">></span>    showlrc<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    theme<span class="token punctuation">:</span> <span class="token string">'#F5F5F5'</span><span class="token punctuation">,</span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 插件背景颜色，建议和你的公告栏背景色一样，这样融为一体的感觉 <span class="token operator">--</span><span class="token operator">></span>    music<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'China'</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string">'习谱予'</span><span class="token punctuation">,</span>            url<span class="token punctuation">:</span> <span class="token string">'http://music.163.com/song/media/outer/url?id=507532178.mp3'</span><span class="token punctuation">,</span>            pic<span class="token punctuation">:</span> <span class="token string">'http://images.cnblogs.com/cnblogs_com/shwee/1218109/o_music_pic1.png'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ap<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-8-公告栏人形时钟（一个很占内存的Flash）"><a href="#2-8-公告栏人形时钟（一个很占内存的Flash）" class="headerlink" title="2.8 公告栏人形时钟（一个很占内存的Flash）"></a>2.8 公告栏人形时钟（一个很占内存的Flash）</h3><p>在侧边公告栏内加入：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>人形时钟<span class="token operator">></span><span class="token operator">&lt;</span>embed wmode<span class="token operator">=</span><span class="token string">"transparent"</span> src<span class="token operator">=</span><span class="token string">"https://files.cnblogs.com/files/enjoy233/honehone_clock_tr.swf"</span> quality<span class="token operator">=</span><span class="token string">"high"</span> bgcolor<span class="token operator">=</span><span class="token string">"#FDF6E3"</span> width<span class="token operator">=</span><span class="token string">"200"</span> height<span class="token operator">=</span><span class="token string">"120"</span> name<span class="token operator">=</span><span class="token string">"honehoneclock"</span> align<span class="token operator">=</span><span class="token string">"middle"</span> allowscriptaccess<span class="token operator">=</span><span class="token string">"always"</span>type<span class="token operator">=</span><span class="token string">"application/x-shockwave-flash"</span> pluginspage<span class="token operator">=</span><span class="token string">"http://www.macromedia.com/go/getflashplayer"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-9-公告栏每日一言"><a href="#2-9-公告栏每日一言" class="headerlink" title="2.9 公告栏每日一言"></a>2.9 公告栏每日一言</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>实现每日一言<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hitokoto"</span>style<span class="token operator">=</span><span class="token string">"font-size:16px;color:red;"</span><span class="token operator">></span><span class="token punctuation">:</span>D 获取中<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>End<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://v1.hitokoto.cn'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> hitokoto <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hitokoto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      hitokoto<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">"每日一言："</span><span class="token operator">+</span>data<span class="token punctuation">.</span>hitokoto<span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-10-为自己的博客添加目录（不怎么好看就是啦）"><a href="#2-10-为自己的博客添加目录（不怎么好看就是啦）" class="headerlink" title="2.10  为自己的博客添加目录（不怎么好看就是啦）"></a>2.10  为自己的博客添加目录（不怎么好看就是啦）</h3><h4 id="2-10-1-页面定制css"><a href="#2-10-1-页面定制css" class="headerlink" title="2.10.1 页面定制css"></a>2.10.1 页面定制css</h4><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*主目录*/</span><span class="token selector"><span class="token id">#mainContent</span> </span><span class="token punctuation">{</span>    <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-o-text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">22</span>em<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">95%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-10-2-侧边栏公告"><a href="#2-10-2-侧边栏公告" class="headerlink" title="2.10.2 侧边栏公告"></a>2.10.2 侧边栏公告</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>目录<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>      <span class="token comment" spellcheck="true">//以下是锚点JS</span>      <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>      a<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          d <span class="token operator">=</span> <span class="token string">'sideToolbar'</span><span class="token punctuation">,</span>          e <span class="token operator">=</span> <span class="token string">'sideCatalog'</span><span class="token punctuation">,</span>          f <span class="token operator">=</span> <span class="token string">'sideCatalog-catalog'</span><span class="token punctuation">,</span>          g <span class="token operator">=</span> <span class="token string">'sideCatalogBtn'</span><span class="token punctuation">,</span>          h <span class="token operator">=</span> <span class="token string">'sideToolbar-up'</span><span class="token punctuation">,</span>          i <span class="token operator">=</span> <span class="token string">'&lt;div id="sideToolbar"style="display:none;">\&lt;div class="sideCatalogBg"id="sideCatalog">\&lt;div id="sideCatalog-sidebar">\&lt;div class="sideCatalog-sidebar-top">&lt;/div>\&lt;div class="sideCatalog-sidebar-bottom">&lt;/div>\&lt;/div>\&lt;div id="sideCatalog-catalog">\&lt;ul class="nav"style="width:225px;zoom:1">\&lt;/ul>\&lt;/div>\&lt;/div>\&lt;a href="javascript:void(0);"id="sideCatalogBtn"class="sideCatalogBtnDisable">&lt;/a>\&lt;/div>'</span><span class="token punctuation">,</span>          j <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>          k <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>          l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>          m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>          n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">//限制存在个数，如数量过多，则只显示h2，不显示h3</span>          <span class="token comment" spellcheck="true">//o, p = 13,</span>          o<span class="token punctuation">,</span> p <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span>          q <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          r <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          s <span class="token operator">=</span> b<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        b<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//指定获取目录的范围-------------这一点非常重要，因为每个人指定的范围都不一样，所以这是要修改的地方</span>        <span class="token comment" spellcheck="true">//o = s.find(':header');</span>        o <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cnblogs_post_body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">':header'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>length <span class="token operator">></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>          r <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> t <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'h1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> u <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'h2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">+</span> u<span class="token punctuation">.</span>length <span class="token operator">></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>            q <span class="token operator">=</span> <span class="token boolean">false</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        o<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            v <span class="token operator">=</span> u<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> title <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> text <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          u<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token string">'autoid-'</span> <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> n<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//if (!u.attr('id')) {</span>          <span class="token comment" spellcheck="true">//    u.attr('id', 'autoid-' + l + '-' + m + '-' + n)</span>          <span class="token comment" spellcheck="true">//};</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>localName <span class="token operator">===</span> <span class="token string">'h1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            l<span class="token operator">++</span><span class="token punctuation">;</span>            m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">14</span><span class="token punctuation">)</span> text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"..."</span><span class="token punctuation">;</span>            j <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;li>&lt;span>'</span> <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token string">'&amp;nbsp&amp;nbsp&lt;/span>&lt;a href="#'</span> <span class="token operator">+</span> u<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'" title="'</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'">'</span> <span class="token operator">+</span> text <span class="token operator">+</span> <span class="token string">'&lt;/a>&lt;span class="sideCatalog-dot">&lt;/span>&lt;/li>'</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>localName <span class="token operator">===</span> <span class="token string">'h2'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            m<span class="token operator">++</span><span class="token punctuation">;</span>            n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">)</span> text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"..."</span><span class="token punctuation">;</span>              j <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;li class="h2Offset">&lt;span>'</span> <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">'&amp;nbsp&amp;nbsp&lt;/span>&lt;a href="#'</span> <span class="token operator">+</span> u<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'" title="'</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'">'</span> <span class="token operator">+</span> text <span class="token operator">+</span> <span class="token string">'&lt;/a>&lt;/li>'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>localName <span class="token operator">===</span> <span class="token string">'h3'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            n<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>              j <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;li class="h3Offset">&lt;span>'</span> <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">'.'</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">'&amp;nbsp&amp;nbsp&lt;/span>&lt;a href="#'</span> <span class="token operator">+</span> u<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'" title="'</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">'">'</span> <span class="token operator">+</span> u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'&lt;/a>&lt;/li>'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#'</span> <span class="token operator">+</span> f <span class="token operator">+</span> <span class="token string">'>ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>        b<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">'spy'</span><span class="token punctuation">,</span> <span class="token string">'scroll'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        b<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'.sideCatalogBg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollspy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          target<span class="token punctuation">:</span> <span class="token string">'.sideCatalogBg'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $sideCatelog <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#'</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#'</span> <span class="token operator">+</span> g<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">'sideCatalogBtnDisable'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            $sideCatelog<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'visibility'</span><span class="token punctuation">,</span> <span class="token string">'hidden'</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            $sideCatelog<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'visibility'</span><span class="token punctuation">,</span> <span class="token string">'visible'</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">'sideCatalogBtnDisable'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#'</span> <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"html,body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            scrollTop<span class="token punctuation">:</span> <span class="token number">0</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        $sideToolbar <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#'</span> <span class="token operator">+</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//通过判断评论框是否存在显示索引目录</span>        <span class="token keyword">var</span> commentDiv <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#blog-comments-placeholder"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//评论框存在才调用方法</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>commentDiv<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>t <span class="token operator">></span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>              $sideToolbar<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'block'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gotop'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>              $sideToolbar<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span>              <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gotop'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//以上是锚点JS</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-10-3-页脚html代码"><a href="#2-10-3-页脚html代码" class="headerlink" title="2.10.3 页脚html代码"></a>2.10.3 页脚html代码</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"http://files.cnblogs.com/files/miangao/bootstrap.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script language<span class="token operator">=</span><span class="token string">"javascript"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token comment" spellcheck="true">//生成目录索引列表</span><span class="token keyword">function</span> <span class="token function">GenerateContentList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> jquery_h3_list <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cnblogs_post_body h1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果你的章节标题不是h3,只需要将这里的h3换掉即可</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>jquery_h3_list<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">'&lt;a name="_labelTop">&lt;/a>'</span><span class="token punctuation">;</span>        content    <span class="token operator">=</span> <span class="token string">'&lt;div id="navCategory">'</span><span class="token punctuation">;</span>        content    <span class="token operator">=</span> <span class="token string">'&lt;p style="font-size:18px">&lt;b>阅读目录&lt;/b>&lt;/p>'</span><span class="token punctuation">;</span>        content    <span class="token operator">=</span> <span class="token string">'&lt;ul>'</span><span class="token punctuation">;</span>        content    <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;/ul>'</span><span class="token punctuation">;</span>        content    <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#cnblogs_post_body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">// $($('#cnblogs_post_body')[0]).prepend(content);</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token function">GenerateContentList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-11-鼠标点击出文字"><a href="#2-11-鼠标点击出文字" class="headerlink" title="2.11 鼠标点击出文字"></a>2.11 鼠标点击出文字</h3><p>加入到页脚html代码中</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>鼠标<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"富强"</span><span class="token punctuation">,</span> <span class="token string">"民主"</span><span class="token punctuation">,</span> <span class="token string">"文明"</span><span class="token punctuation">,</span> <span class="token string">"和谐"</span><span class="token punctuation">,</span> <span class="token string">"自由"</span><span class="token punctuation">,</span> <span class="token string">"平等"</span><span class="token punctuation">,</span> <span class="token string">"公正"</span> <span class="token punctuation">,</span><span class="token string">"法治"</span><span class="token punctuation">,</span> <span class="token string">"爱国"</span><span class="token punctuation">,</span> <span class="token string">"敬业"</span><span class="token punctuation">,</span> <span class="token string">"诚信"</span><span class="token punctuation">,</span> <span class="token string">"友善"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>        y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">"z-index"</span><span class="token punctuation">:</span> <span class="token number">999999999999999999999999999999999999999999999999999999999999999999999</span><span class="token punctuation">,</span>            <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string">"left"</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>            <span class="token string">"position"</span><span class="token punctuation">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string">"font-weight"</span><span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#ff6651"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>            <span class="token string">"opacity"</span><span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token number">1500</span><span class="token punctuation">,</span>        <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-12-页面雪花飘落"><a href="#2-12-页面雪花飘落" class="headerlink" title="2.12 页面雪花飘落"></a>2.12 页面雪花飘落</h3><h4 id="2-12-1-页脚代码（可以从链接中自行下载js文件）"><a href="#2-12-1-页脚代码（可以从链接中自行下载js文件）" class="headerlink" title="2.12.1 页脚代码（可以从链接中自行下载js文件）"></a>2.12.1 页脚代码（可以从链接中自行下载js文件）</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>雪花<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"Snow"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>canvas id<span class="token operator">=</span><span class="token string">"Snow"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/wjsoj/snow.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-12-2-页面css"><a href="#2-12-2-页面css" class="headerlink" title="2.12.2 页面css"></a>2.12.2 页面css</h4><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token id">#Snow</span></span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">99999</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">125</span>,<span class="token number">137</span>,<span class="token number">95</span>,<span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-13-加一个好看的看板娘"><a href="#2-13-加一个好看的看板娘" class="headerlink" title="2.13 加一个好看的看板娘"></a>2.13 加一个好看的看板娘</h3><p>页脚html代码（js可自行下载）</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>看板娘<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html xmlns<span class="token operator">=</span><span class="token string">"http://www.w3.org/1999/xhtml"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"Content-Type"</span> content<span class="token operator">=</span><span class="token string">"text/html; charset=UTF-8"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Live2D<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/wjsoj/waifu.css"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/wjsoj/waifu.css"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waifu"</span> id<span class="token operator">=</span><span class="token string">"waifu"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waifu-tips"</span> style<span class="token operator">=</span><span class="token string">"opacity: 1;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>canvas id<span class="token operator">=</span><span class="token string">"live2d"</span> width<span class="token operator">=</span><span class="token string">"280"</span> height<span class="token operator">=</span><span class="token string">"250"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"live2d"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waifu-tool"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-home"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-chat"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-eye"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-user"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-photo"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-info-circle"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fui-cross"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/wjsoj/live2d.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/wjsoj/waifu-tips.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token function">initModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"https://blog-static.cnblogs.com/files/yjlblog/flat-ui.min.css"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-14-页首html代码（js引用以及背景动态线条）"><a href="#2-14-页首html代码（js引用以及背景动态线条）" class="headerlink" title="2.14 页首html代码（js引用以及背景动态线条）"></a>2.14 页首html代码（js引用以及背景动态线条）</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token operator">!</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">function</span> <span class="token function">n</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> n<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">||</span> t            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> t<span class="token punctuation">.</span>length<span class="token punctuation">,</span> i <span class="token operator">=</span> t<span class="token punctuation">[</span>o <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    l<span class="token punctuation">:</span> o<span class="token punctuation">,</span>                    z<span class="token punctuation">:</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"zIndex"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">:</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"opacity"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    c<span class="token punctuation">:</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"0,0,128"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">:</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"count"</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                a <span class="token operator">=</span> m<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>                        c <span class="token operator">=</span> m<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                r<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> t<span class="token punctuation">,</span> o<span class="token punctuation">,</span> m<span class="token punctuation">,</span> l<span class="token punctuation">;</span>                s<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>x <span class="token operator">+</span><span class="token operator">=</span> i<span class="token punctuation">.</span>xa<span class="token punctuation">,</span> i<span class="token punctuation">.</span>y <span class="token operator">+</span><span class="token operator">=</span> i<span class="token punctuation">.</span>ya<span class="token punctuation">,</span> i<span class="token punctuation">.</span>xa <span class="token operator">*</span><span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">></span> a <span class="token operator">||</span> i<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>ya <span class="token operator">*</span><span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">></span> c <span class="token operator">||</span> i<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> e <span class="token operator">&lt;</span> u<span class="token punctuation">.</span>length<span class="token punctuation">;</span> e<span class="token operator">++</span><span class="token punctuation">)</span> n <span class="token operator">=</span> u<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token keyword">null</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> <span class="token keyword">null</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> i<span class="token punctuation">.</span>x <span class="token operator">-</span> n<span class="token punctuation">.</span>x<span class="token punctuation">,</span> m <span class="token operator">=</span> i<span class="token punctuation">.</span>y <span class="token operator">-</span> n<span class="token punctuation">.</span>y<span class="token punctuation">,</span>                            l <span class="token operator">=</span> o <span class="token operator">*</span> o <span class="token operator">+</span> m <span class="token operator">*</span> m<span class="token punctuation">,</span> l <span class="token operator">&lt;</span> n<span class="token punctuation">.</span>max <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> y <span class="token operator">&amp;&amp;</span> l <span class="token operator">>=</span> n<span class="token punctuation">.</span>max <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>x <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">.</span><span class="token number">03</span> <span class="token operator">*</span> o<span class="token punctuation">,</span> i<span class="token punctuation">.</span>y <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">.</span><span class="token number">03</span> <span class="token operator">*</span> m<span class="token punctuation">)</span><span class="token punctuation">,</span>                            t <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>max <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">.</span>max<span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> t <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"rgba("</span> <span class="token operator">+</span> d<span class="token punctuation">.</span>c <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>x<span class="token punctuation">,</span> i<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>x<span class="token punctuation">,</span> n<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token function">x</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> a<span class="token punctuation">,</span> c<span class="token punctuation">,</span> u<span class="token punctuation">,</span> m <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    d <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token string">"c_n"</span> <span class="token operator">+</span> d<span class="token punctuation">.</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    x <span class="token operator">=</span> window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>oRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>msRequestAnimationFrame <span class="token operator">||</span>                            <span class="token keyword">function</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1e3</span> <span class="token operator">/</span> <span class="token number">65</span><span class="token punctuation">)</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                    w <span class="token operator">=</span> Math<span class="token punctuation">.</span>random<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">2e4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            m<span class="token punctuation">.</span>id <span class="token operator">=</span> l<span class="token punctuation">,</span> m<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">"position:fixed;top:0;left:0;z-index:"</span> <span class="token operator">+</span> d<span class="token punctuation">.</span>z <span class="token operator">+</span> <span class="token string">";opacity:"</span> <span class="token operator">+</span> d<span class="token punctuation">.</span>o<span class="token punctuation">,</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>onresize <span class="token operator">=</span> o<span class="token punctuation">,</span>                    window<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        n <span class="token operator">=</span> n <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">,</span> y<span class="token punctuation">.</span>x <span class="token operator">=</span> n<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> y<span class="token punctuation">.</span>y <span class="token operator">=</span> n<span class="token punctuation">.</span>clientY                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    window<span class="token punctuation">.</span>onmouseout <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        y<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> y<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">null</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> d<span class="token punctuation">.</span>n <span class="token operator">></span> f<span class="token punctuation">;</span> f<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> h <span class="token operator">=</span> <span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> a<span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> c<span class="token punctuation">,</span> v <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> p <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>                s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> h<span class="token punctuation">,</span> y<span class="token punctuation">:</span> g<span class="token punctuation">,</span> xa<span class="token punctuation">:</span> v<span class="token punctuation">,</span> ya<span class="token punctuation">:</span> p<span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">6e3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            u <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://files.cnblogs.com/files/miangao/maodian.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://files.cnblogs.com/files/miangao/maodian.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://files.cnblogs.com/files/miangao/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-15-视频播放控件"><a href="#2-15-视频播放控件" class="headerlink" title="2.15 视频播放控件"></a>2.15 视频播放控件</h3><p>页面定制css</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*视频播放器*/</span><span class="token selector"><span class="token id">#cnblogs_post_body</span> <span class="token class">.video</span></span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">56.25%</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 16:9 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#cnblogs_post_body</span> <span class="token class">.video</span> iframe</span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-16-好玩的自我介绍"><a href="#2-16-好玩的自我介绍" class="headerlink" title="2.16  好玩的自我介绍"></a>2.16  好玩的自我介绍</h3><p>使用方法（放在文章中）：</p><pre class="line-numbers language-markdown"><code class="language-markdown">![](https://ipcounter.ihcr.top?mode=2&amp;mail=yourdomin@xxx.com&amp;str=NAME&amp;qq=xxxxxxxx&amp;lg=xxxxxx&amp;pic=)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-Enjoy-Blogging"><a href="#3-Enjoy-Blogging" class="headerlink" title="3. Enjoy Blogging!"></a>3. Enjoy Blogging!</h2><h3 id="欢迎参观我的博客园"><a href="#欢迎参观我的博客园" class="headerlink" title="欢迎参观我的博客园"></a>欢迎参观我的<a href="https://www.cnblogs.com/wjsoj/" target="_blank" rel="noopener">博客园</a></h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/21/hello-world/"/>
      <url>/2019/12/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://ipcounter.ihcr.top?mode=2&amp;mail=3023224091@qq.com&amp;str=WJS&amp;qq=3023224091&amp;lg=WJSoj&amp;pic=" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本博客无所不谈，仅供一些必要知识的备份之用，以防遗忘。<br>如有侵权请与作者联系。</p><h2 id="博客建设"><a href="#博客建设" class="headerlink" title="博客建设"></a>博客建设</h2><p>本博客全部采用hexo-matery主题，来自<a href="https://shw2018.github.io" target="_blank" rel="noopener">@洪卫</a>提供的模板代码，并在此基础上做个人修改。<br>因此本博客中保留了来自@洪卫的文章，如需赞赏请移步<a href="https://wjsoj.github.io/2019/08/27/blog-open-source/">此处</a></p><h2 id="博客目标"><a href="#博客目标" class="headerlink" title="博客目标"></a>博客目标</h2><p>这个博客并不是为了让更多人看到，只是为了记录自己在学习道路上的点点滴滴。</p><p>欢迎移步我的<a href="https://www.cnblogs.com/wjsoj/" target="_blank" rel="noopener">博客园</a>。终极目标：为开源未来的建立做出自己的贡献。</p><h3 id="”知识本无价，开源即未来“"><a href="#”知识本无价，开源即未来“" class="headerlink" title="”知识本无价，开源即未来“"></a>”知识本无价，开源即未来“</h3><h2 id="以下为hexo原生教程“Hello-World-”"><a href="#以下为hexo原生教程“Hello-World-”" class="headerlink" title="以下为hexo原生教程“Hello World!”"></a>以下为hexo原生教程“Hello World!”</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用模板汇总</title>
      <link href="/2019/12/20/chang-yong-mo-ban-hui-zong/"/>
      <url>/2019/12/20/chang-yong-mo-ban-hui-zong/</url>
      
        <content type="html"><![CDATA[<h1 id="SPFA单源最短路"><a href="#SPFA单源最短路" class="headerlink" title="SPFA单源最短路"></a>SPFA单源最短路</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">struct</span> nod<span class="token punctuation">{</span>    <span class="token keyword">int</span> to<span class="token punctuation">,</span>w<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>vector <span class="token operator">&lt;</span>nod<span class="token operator">></span> g<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> vis<span class="token punctuation">[</span><span class="token number">500005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dis<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>s<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">spfa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    dis<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> q<span class="token punctuation">;</span>    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> now<span class="token operator">=</span>q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vis<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>g<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            nod nex<span class="token operator">=</span>g<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dis<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token operator">+</span>nex<span class="token punctuation">.</span>w<span class="token operator">&lt;</span>dis<span class="token punctuation">[</span>nex<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                dis<span class="token punctuation">[</span>nex<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token operator">=</span>dis<span class="token punctuation">[</span>now<span class="token punctuation">]</span><span class="token operator">+</span>nex<span class="token punctuation">.</span>w<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>vis<span class="token punctuation">[</span>nex<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    vis<span class="token punctuation">[</span>nex<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nex<span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">read</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">;</span>        <span class="token function">read</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>        nod tmp<span class="token punctuation">;</span>        tmp<span class="token punctuation">.</span>to<span class="token operator">=</span>y<span class="token punctuation">;</span>tmp<span class="token punctuation">.</span>w<span class="token operator">=</span>w<span class="token punctuation">;</span>        g<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        vis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>dis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2147483647</span><span class="token punctuation">;</span>    <span class="token function">spfa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token operator">==</span>i<span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span>dis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Tarjan求LCA"><a href="#Tarjan求LCA" class="headerlink" title="Tarjan求LCA"></a>Tarjan求LCA</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> MAXN 500005</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> LL<span class="token punctuation">;</span><span class="token keyword">int</span> fa<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">,</span>xx<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">,</span>yy<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">,</span>q<span class="token punctuation">;</span>map <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token operator">></span> ans<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> edge<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">,</span>cha<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> vis<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">char</span> ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token operator">||</span>ch<span class="token operator">></span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>ch<span class="token operator">==</span><span class="token string">'-'</span><span class="token punctuation">)</span>f<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>ch<span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>ch<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    x<span class="token operator">*</span><span class="token operator">=</span>f<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        fa<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">getfa</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">==</span>x<span class="token operator">?</span>x<span class="token operator">:</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">getfa</span><span class="token punctuation">(</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">unio</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> xx<span class="token operator">=</span><span class="token function">getfa</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>yy<span class="token operator">=</span><span class="token function">getfa</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>xx<span class="token operator">!=</span>yy<span class="token punctuation">)</span>        fa<span class="token punctuation">[</span>yy<span class="token punctuation">]</span><span class="token operator">=</span>xx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">tarjan</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> la<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> lens<span class="token operator">=</span>edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>lens<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span>la<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">tarjan</span><span class="token punctuation">(</span>edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">unio</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            vis<span class="token punctuation">[</span>edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    lens<span class="token operator">=</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>lens<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>vis<span class="token punctuation">[</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ans<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">getfa</span><span class="token punctuation">(</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ans<span class="token punctuation">[</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">getfa</span><span class="token punctuation">(</span>cha<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">read</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> u<span class="token punctuation">,</span>v<span class="token punctuation">;</span>        <span class="token function">read</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        edge<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        edge<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">read</span><span class="token punctuation">(</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cha<span class="token punctuation">[</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cha<span class="token punctuation">[</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">tarjan</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="最小生成树kruskal"><a href="#最小生成树kruskal" class="headerlink" title="最小生成树kruskal"></a>最小生成树kruskal</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">struct</span> nod<span class="token punctuation">{</span>    <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">;</span><span class="token punctuation">}</span>e<span class="token punctuation">[</span><span class="token number">400005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> fa<span class="token punctuation">[</span><span class="token number">400005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>nod a<span class="token punctuation">,</span>nod b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>w<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>w<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">==</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token keyword">return</span> fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">read</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">read</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">read</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        fa<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>    <span class="token function">stable_sort</span><span class="token punctuation">(</span>e<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>e<span class="token operator">+</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> u<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token operator">==</span>v<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>        ans<span class="token operator">+</span><span class="token operator">=</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span>        fa<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ans<span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"orz\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h1><pre class="line-numbers language-cpp"><code class="language-cpp">priority_queue <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">,</span>less<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span> q1<span class="token punctuation">;</span>priority_queue <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">,</span>greater<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">>></span> q2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="斐波那契数列递推"><a href="#斐波那契数列递推" class="headerlink" title="斐波那契数列递推"></a>斐波那契数列递推</h1><pre class="line-numbers language-cpp"><code class="language-cpp">ll a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ll res<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">mul</span><span class="token punctuation">(</span>ll x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ll y<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">memset</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>                res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>y<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    n<span class="token operator">-</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    ans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token function">mul</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    n<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">mul</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">struct</span> nod<span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>nod a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">out</span><span class="token punctuation">(</span>nod c<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            cout<span class="token operator">&lt;&lt;</span>c<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">inline</span> nod <span class="token function">mul</span><span class="token punctuation">(</span>nod a<span class="token punctuation">,</span>nod b<span class="token punctuation">)</span><span class="token punctuation">{</span>    nod ans<span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>ans<span class="token punctuation">.</span>a<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>ans<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>ans<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>b<span class="token punctuation">.</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">inline</span> nod <span class="token function">kuaisumi</span><span class="token punctuation">(</span>nod a<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>    nod ans<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>j<span class="token punctuation">)</span> ans<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> ans<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span>            ans<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        k<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>c<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">+</span>c<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="文件输入输出"><a href="#文件输入输出" class="headerlink" title="文件输入输出"></a>文件输入输出</h1><pre class="line-numbers language-cpp"><code class="language-cpp">    <span class="token macro property">#<span class="token directive keyword">ifndef</span> file</span>    <span class="token keyword">char</span> IN<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">".in"</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> OUT<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">".out"</span><span class="token punctuation">;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span>IN<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span>OUT<span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token macro property">#<span class="token directive keyword">endif</span></span>    <span class="token macro property">#<span class="token directive keyword">ifndef</span> file</span>    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token macro property">#<span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二分排序"><a href="#二分排序" class="headerlink" title="二分排序"></a>二分排序</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">A</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span><span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> mid<span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token punctuation">(</span>l<span class="token operator">+</span>r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span>l<span class="token punctuation">,</span>j<span class="token operator">=</span>r<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>j<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>mid<span class="token operator">&amp;&amp;</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">>=</span>l<span class="token punctuation">)</span>            j<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>j<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>            j<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token operator">&lt;=</span>j<span class="token punctuation">)</span>            <span class="token function">A</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>r<span class="token punctuation">)</span>            <span class="token function">A</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="欧拉筛"><a href="#欧拉筛" class="headerlink" title="欧拉筛"></a>欧拉筛</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">bool</span> isprime<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> prime<span class="token punctuation">[</span><span class="token number">5005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> top<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span>isprime<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>isprime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>isprime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        prime<span class="token punctuation">[</span>top<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>top<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span><span class="token number">10000</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        isprime<span class="token punctuation">[</span>i<span class="token operator">*</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="高精加"><a href="#高精加" class="headerlink" title="高精加"></a>高精加</h1><pre class="line-numbers language-cpp"><code class="language-cpp">string s<span class="token punctuation">,</span>sx<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">505</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span><span class="token number">505</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ans<span class="token punctuation">[</span><span class="token number">505</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">>></span>s<span class="token operator">>></span>sx<span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>pos<span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>pos<span class="token operator">--</span><span class="token punctuation">)</span>        a<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>pos<span class="token operator">=</span>sx<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>sx<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">,</span>pos<span class="token operator">--</span><span class="token punctuation">)</span>        b<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token operator">=</span>sx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> jinwei<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sx<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>jinwei<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>        jinwei<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>jinwei<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>jinwei<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>jinwei<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>len<span class="token punctuation">;</span>i<span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span>            cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>len<span class="token punctuation">;</span>i<span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span>            cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="快速读入"><a href="#快速读入" class="headerlink" title="快速读入"></a>快速读入</h1><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token operator">||</span>ch<span class="token operator">></span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ch<span class="token operator">==</span><span class="token string">'-'</span><span class="token punctuation">)</span>            f<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>ch<span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>ch<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    x<span class="token operator">*</span><span class="token operator">=</span>f<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实数（注意输入必须要包含小数点）"><a href="#实数（注意输入必须要包含小数点）" class="headerlink" title="实数（注意输入必须要包含小数点）"></a>实数（注意输入必须要包含小数点）</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">double</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">double</span> y<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">&lt;</span><span class="token string">'0'</span><span class="token operator">||</span>ch<span class="token operator">></span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ch<span class="token operator">==</span><span class="token string">'-'</span><span class="token punctuation">)</span>            f<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span>ch<span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>ch<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>ch<span class="token operator">>=</span><span class="token string">'0'</span><span class="token operator">&amp;&amp;</span> ch<span class="token operator">&lt;=</span><span class="token string">'9'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        x<span class="token operator">+</span><span class="token operator">=</span><span class="token punctuation">(</span>y<span class="token operator">/</span><span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>ch<span class="token operator">^</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ch<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    x<span class="token operator">*</span><span class="token operator">=</span>f<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客开源</title>
      <link href="/2019/08/27/blog-open-source/"/>
      <url>/2019/08/27/blog-open-source/</url>
      
        <content type="html"><![CDATA[<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://raw.githubusercontent.com/shw2018/cdn/master/blog_files/img/Blog-Open-Source/blog-demo1.gif" alt="演示Demo"></p><h1 id="简短介绍"><a href="#简短介绍" class="headerlink" title="简短介绍"></a>简短介绍</h1><p>倒腾了一两周总算把个人博客网站完善了，目前这个版本使用应该是够了，当然还有一些优化项和功能增加后续在慢慢更新，为了回馈开源，今天准备把我自己修改完善的<code>blog</code>网站源代码开源。这不是生成后的网页文件，是您可以直接使用的源码，您只需要把博客相关信息换成您自己的就可以部署了，对于新手或者不懂编程的小伙伴来说，简直是福音，极大简化了您构建博客的工作量和复杂度，每个人都可以下载并修改成自己喜欢样式！如果你有修改想法，欢迎PR！最后，我们还是给这个开源小项目取个名字吧，就叫<a href="https://github.com/shw2018/hexo-blog-fly.git" target="_blank" rel="noopener">hexo-blog-fly</a>吧，怎么样？&lt;&lt;&lt;&lt;&lt;<a href="https://github.com/shw2018/hexo-blog-fly" target="_blank" rel="noopener">源代码下载</a>&gt;&gt;&gt;&gt;&gt;</p><p>本博客基于<code>Hexo</code>框架搭建，用到<a href="https://github.com/shw2018/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>主题, 并在此基础之上做了很多修改，修复了一些bug，增加了一些新的特性和功能，博客地址：<a href="https://shw2018.github.io/" target="_blank" rel="noopener">https://shw2018.github.io</a>，博客演示：<a href="https://sunhwee.com" target="_blank" rel="noopener">sunhwee.com</a>。</p><hr><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p><strong>原主题特性</strong>:</p><ul><li><p>简单漂亮，文章内容美观易读</p></li><li><p><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</p></li><li><p>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</p></li><li><p>首页轮播文章及每天动态切换 <code>Banner</code> 图片</p></li><li><p>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</p></li><li><p>时间轴式的归档页</p></li><li><p><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</p></li><li><p>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</p></li><li><p>可自定义的数据的友情链接页面</p></li><li><p>支持文章置顶和文章打赏</p></li><li><p>支持 <code>MathJax</code></p></li><li><p><code>TOC</code> 目录</p></li><li><p>可设置复制文章内容时追加版权信息</p></li><li><p>可设置阅读文章时做密码验证</p></li><li><p><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</p></li><li><p>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</p></li><li><p>支持在首页的音乐播放和视频播放功能</p><p><strong>增加的工作或特性(未打钩的是已做但还没更新到源码的)</strong>:</p></li><li><p>修改了原主题的一些很多<code>bug</code>   2019.08.05</p></li><li><p>加入图片懒加载功能，在根目录配置文件开启和关闭    2019.08.09</p></li><li><p>增加<code>留言板</code>功能          2019.08.05</p></li><li><p>在关于板块,加入<code>简历</code>功能页   2019.08.05</p></li><li><p>增加视听[视觉听觉影音]板块       2019.08.10</p></li><li><p>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。  2019.08.10</p></li><li><p>增加网站运行时间显示  2019.08.10</p></li><li><p>增加<code>动漫模型</code>     2019.08.10</p></li><li><p>整体替换Banner图片和文章特色图片   2019.08.10</p></li><li><p>增加分类<code>相册</code>功能         2019.08.29</p></li><li><p>去掉标签页,将其合并至<code>分类</code>页中                2019.09.01</p></li><li><p>修改了一些控件的参数   2019.09.01</p></li><li><p>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观          2019.09.01</p></li><li><p>解决首页文章列表卡片上方 <code>border-radius</code>圆角失效的bug  2019.09.01</p></li><li><p>添加页面樱花飘落动效            2019.09.09</p></li><li><p>添加鼠标点击烟花爆炸动效   2019.09.09</p></li><li><p>加入天气接口控件   2019.09.09</p></li><li><p>加入鼠标点击文字特效   2019.09.10</p></li><li><p>添加页面雪花飘落动效            2019.09.10</p></li><li><p>添加在线聊天插件            2019.09.12</p></li><li><p>持续更新…</p></li></ul><hr><p><strong>简单使用方法：</strong></p><ol><li><code>star</code> 本项目</li><li>安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>, 安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodeJS</a></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>修改配置信息，改成自己的信息</li><li>运行命令<code>hexo  clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo  s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><blockquote><p><strong>更多详情教程，强烈推荐看我写的：<a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">Hexo+Github博客搭建完全教程</a></strong></p></blockquote><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote><p><strong>持续更新中…，如果遇到问题欢迎联系我，在文章最后评论区【留言和讨论】，当然，欢迎点击文章最后的打赏按键，请博主一杯冰阔乐，笑～</strong></p><table>  <tbody><tr>    <td><img width="100" src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://sunhwee.com/medias/reward/alipay.bmp"></td>    <td><img width="100" src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://sunhwee.com/medias/reward/wechat.bmp"></td>    <td><img width="100" src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://sunhwee.com/medias/reward/zan.png"></td>     </tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
